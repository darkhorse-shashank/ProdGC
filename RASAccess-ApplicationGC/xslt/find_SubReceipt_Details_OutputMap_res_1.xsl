<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/find_SubReceipt_Details_OutputMap_res_1.map" md5sum="85e53395e697bc390cdaddfef458ae4b" version="8.0.501" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM Graphical Data Mapping Editor.
*   Version 8.0.5.0
*
*   Mapping file:		find_SubReceipt_Details_OutputMap_res_1.map
*   Map declaration(s):	find_SubReceipt_Details_OutputMap_res_1
*   Input file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FAccess-ApplicationGC%257DcorrelationBO/message%3D%257Bhttp%253A%252F%252Fstub.tagicesb.com%252Fwsdl%252FRASGenericService%252F%257DfetchSubReceiptDetailsResponse/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FAccess-ApplicationGC%257DcorrelationBO/message%3D%257Bhttp%253A%252F%252FGCDomain-v1.0.0%252Forg%252Ftataaig%252Faccess%252FRetrieveAccessGC%257DfindSubReceiptDetailsResponseMsg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:str="http://exslt.org/strings"
    xmlns:exsl="http://exslt.org/common"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:in2="wsdl.http://stub.tagicesb.com/wsdl/RASGenericService/"
    xmlns:in3="http://stub.tagicesb.com/wsdl/RASGenericService/"
    xmlns:io5="http://www.w3.org/2005/08/addressing"
    xmlns:io4="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io6="http://Access-ApplicationGC"
    xmlns:io7="http://www.w3.org/2003/05/soap-envelope"
    xmlns:in="WebService_RefundDetails"
    xmlns:io="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:out3="http://GCDomain-v1.0.0/org/tataaig/access/RetrieveAccessGC"
    xmlns:out2="http://GCLibrary/org/aig/access/BO"
    xmlns:out5="wsdl.http://GCDomain-v1.0.0/org/tataaig/access/RetrieveAccessGC"
    xmlns:out4="http://RACASBO"
    xmlns:out="http://GCLibrary/org/aig/access/bo"
    xmlns:MapUtils="xalan://com.ibm.wbiserver.transform.util.MapUtils"
    xmlns:map="http://Access-ApplicationGC/xslt/find_SubReceipt_Details_OutputMap_res_1"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="date str exsl set math MapUtils map xalan msl"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io2:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:find_SubReceipt_Details_OutputMap_res_12">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io2:smo" mode="map:find_SubReceipt_Details_OutputMap_res_1">
        </xsl:apply-templates>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template match="io2:smo"  mode="map:find_SubReceipt_Details_OutputMap_res_1">
    <io2:smo>
      <body>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'out5:findSubReceiptDetailsResponseMsg'"/>
        </xsl:attribute>
        <out3:findSubReceiptDetailsResponse>
          <subRecieptDtls>
            <out4:payload>
              <!-- a simple data mapping: "context/correlation/crsno"(string) to "out4:crsNo"(string) -->
              <xsl:if test="context/correlation/crsno">
                <xsl:element name="out4:crsNo">
                  <xsl:value-of select="context/correlation/crsno"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/authCode"(string) to "out4:authCode"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/authCode">
                <xsl:element name="out4:authCode">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/authCode"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/txtStatus"(string) to "out4:crsStatus"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/txtStatus">
                <xsl:element name="out4:crsStatus">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/txtStatus"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/instrumentAmt"(string) to "out4:crsAmount"(double) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/instrumentAmt">
                <xsl:element name="out4:crsAmount">
                  <!-- variables for custom code -->
                  <xsl:variable name="instrumentAmt" select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/instrumentAmt"/>
                  <xsl:value-of select="MapUtils:stringToDouble($instrumentAmt, '0.0')"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptPayerType"(string) to "out4:payerType"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptPayerType">
                <xsl:element name="out4:payerType">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptPayerType"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/insuredName"(string) to "out4:payeeName"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/insuredName">
                <xsl:element name="out4:payeeName">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/insuredName"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentModeCd"(string) to "out4:paymentReceivedMethod"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentModeCd">
                <xsl:element name="out4:paymentReceivedMethod">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentModeCd"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankName"(string) to "out4:payeeBank"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankName">
                <xsl:element name="out4:payeeBank">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankName"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankIFSC"(string) to "out4:payeeIfscCode"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankIFSC">
                <xsl:element name="out4:payeeIfscCode">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankIFSC"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankAccNo"(string) to "out4:payeeBankAccountNo"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankAccNo">
                <xsl:element name="out4:payeeBankAccountNo">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankAccNo"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/totalAmount"(double) to "out4:totalAmount"(double) -->
              <xsl:if test="context/correlation/totalAmount">
                <xsl:element name="out4:totalAmount">
                  <xsl:value-of select="context/correlation/totalAmount"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/balanceAmt"(string) to "out4:balanceAmount"(double) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/balanceAmt">
                <xsl:element name="out4:balanceAmount">
                  <!-- variables for custom code -->
                  <xsl:variable name="balanceAmt" select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/balanceAmt"/>
                  <xsl:value-of select="MapUtils:stringToDouble($balanceAmt, '0.0')"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/insuredID"(string) to "out4:CRSPayerID"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/insuredID">
                <xsl:element name="out4:CRSPayerID">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/insuredID"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentSource"(string) to "out4:payementSource"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentSource">
                <xsl:element name="out4:payementSource">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentSource"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/housebankname"(string) to "out4:houseBankName"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/housebankname">
                <xsl:element name="out4:houseBankName">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/housebankname"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/housebankAccno"(string) to "out4:houseBankAccountNo"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/housebankAccno">
                <xsl:element name="out4:houseBankAccountNo">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/housebankAccno"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/taggedAmt"(string) to "out4:taggedAmount"(double) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/taggedAmt">
                <xsl:element name="out4:taggedAmount">
                  <!-- variables for custom code -->
                  <xsl:variable name="taggedAmt" select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/taggedAmt"/>
                  <xsl:value-of select="MapUtils:stringToDouble($taggedAmt, '0.0')"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/policyNumbers"(string) to "out4:policyNumbers"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/policyNumbers">
                <xsl:element name="out4:policyNumbers">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/policyNumbers"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentMode"(string) to "out4:payementMode"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentMode">
                <xsl:element name="out4:payementMode">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentMode"/>
                </xsl:element>
              </xsl:if>
              <out4:accountDetails>
                <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankName"(string) to "out4:customerBank"(string) -->
                <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankName">
                  <xsl:element name="out4:customerBank">
                    <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankName"/>
                  </xsl:element>
                </xsl:if>
                <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankIFSC"(string) to "out4:customerIfscCode"(string) -->
                <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankIFSC">
                  <xsl:element name="out4:customerIfscCode">
                    <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankIFSC"/>
                  </xsl:element>
                </xsl:if>
                <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankAccNo"(string) to "out4:bankAccountNo"(string) -->
                <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankAccNo">
                  <xsl:element name="out4:bankAccountNo">
                    <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankAccNo"/>
                  </xsl:element>
                </xsl:if>
                <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/email"(string) to "out4:emailId"(string) -->
                <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/email">
                  <xsl:element name="out4:emailId">
                    <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/email"/>
                  </xsl:element>
                </xsl:if>
                <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/contact"(string) to "out4:contactNo"(string) -->
                <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/contact">
                  <xsl:element name="out4:contactNo">
                    <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/contact"/>
                  </xsl:element>
                </xsl:if>
                <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress1"(string) to "out4:addressLine1"(string) -->
                <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress1">
                  <xsl:element name="out4:addressLine1">
                    <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress1"/>
                  </xsl:element>
                </xsl:if>
                <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress2"(string) to "out4:addressLine2"(string) -->
                <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress2">
                  <xsl:element name="out4:addressLine2">
                    <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress2"/>
                  </xsl:element>
                </xsl:if>
                <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress3"(string) to "out4:addressLine3"(string) -->
                <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress3">
                  <xsl:element name="out4:addressLine3">
                    <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress3"/>
                  </xsl:element>
                </xsl:if>
                <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/state"(string) to "out4:state"(string) -->
                <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/state">
                  <xsl:element name="out4:state">
                    <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/state"/>
                  </xsl:element>
                </xsl:if>
                <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/city"(string) to "out4:city"(string) -->
                <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/city">
                  <xsl:element name="out4:city">
                    <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/city"/>
                  </xsl:element>
                </xsl:if>
                <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/area"(string) to "out4:area"(string) -->
                <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/area">
                  <xsl:element name="out4:area">
                    <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/area"/>
                  </xsl:element>
                </xsl:if>
                <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/pincode"(string) to "out4:pincode"(string) -->
                <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/pincode">
                  <xsl:element name="out4:pincode">
                    <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/pincode"/>
                  </xsl:element>
                </xsl:if>
                <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/landmark"(string) to "out4:landmark"(string) -->
                <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/landmark">
                  <xsl:element name="out4:landmark">
                    <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/landmark"/>
                  </xsl:element>
                </xsl:if>
                <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/district"(string) to "out4:district"(string) -->
                <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/district">
                  <xsl:element name="out4:district">
                    <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/district"/>
                  </xsl:element>
                </xsl:if>
              </out4:accountDetails>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/subReceiptNumbers"(string) to "out4:subreceiptNumbers"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/subReceiptNumbers">
                <xsl:element name="out4:subreceiptNumbers">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/subReceiptNumbers"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptDate"(string) to "out4:receiptDate"(dateTime) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptDate">
                <xsl:element name="out4:receiptDate">
                  <!-- variables for custom code -->
                  <xsl:variable name="receiptDate" select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptDate"/>
                  <xsl:value-of select="MapUtils:stringToDateTime($receiptDate, '2002-01-01T11:00:00')"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/drawerName"(string) to "out4:drawerName"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/drawerName">
                <xsl:element name="out4:drawerName">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/drawerName"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptLAN"(string) to "out4:receiptLANNo"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptLAN">
                <xsl:element name="out4:receiptLANNo">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptLAN"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptAppNo"(string) to "out4:receiptApplicationNo"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptAppNo">
                <xsl:element name="out4:receiptApplicationNo">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptAppNo"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptAccNo"(string) to "out4:receiptAccountNo"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptAccNo">
                <xsl:element name="out4:receiptAccountNo">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptAccNo"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptIFSC"(string) to "out4:receiptIFSCCode"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptIFSC">
                <xsl:element name="out4:receiptIFSCCode">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptIFSC"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/lob"(string) to "out4:lob"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/lob">
                <xsl:element name="out4:lob">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/lob"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/cdNumber"(string) to "out4:cdAcccountNumber"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/cdNumber">
                <xsl:element name="out4:cdAcccountNumber">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/cdNumber"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptPayerName"(string) to "out4:receiptPayerName"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptPayerName">
                <xsl:element name="out4:receiptPayerName">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptPayerName"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/instrumentDate"(string) to "out4:instrumentDate"(dateTime) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/instrumentDate">
                <xsl:element name="out4:instrumentDate">
                  <!-- variables for custom code -->
                  <xsl:variable name="instrumentDate" select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/instrumentDate"/>
                  <xsl:value-of select="MapUtils:stringToDateTime($instrumentDate, '2002-01-01T11:00:00')"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimIFSCCode"(string) to "out4:claimIFSCCode"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimIFSCCode">
                <xsl:element name="out4:claimIFSCCode">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimIFSCCode"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimAcctNo"(string) to "out4:claimAccountNo"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimAcctNo">
                <xsl:element name="out4:claimAccountNo">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimAcctNo"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimBankName"(string) to "out4:claimBankName"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimBankName">
                <xsl:element name="out4:claimBankName">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimBankName"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimEmailID"(string) to "out4:claimEmailID"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimEmailID">
                <xsl:element name="out4:claimEmailID">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimEmailID"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimMobileNo"(string) to "out4:claimMobileNo"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimMobileNo">
                <xsl:element name="out4:claimMobileNo">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimMobileNo"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimClaimantName"(string) to "out4:claimantName"(string) -->
              <xsl:if test="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimClaimantName">
                <xsl:element name="out4:claimantName">
                  <xsl:value-of select="body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimClaimantName"/>
                </xsl:element>
              </xsl:if>
            </out4:payload>
          </subRecieptDtls>
        </out3:findSubReceiptDetailsResponse>
      </body>
    </io2:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template name="map:find_SubReceipt_Details_OutputMap_res_12">
    <xsl:param name="smo"/>
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out5:findSubReceiptDetailsResponseMsg'"/>
      </xsl:attribute>
      <out3:findSubReceiptDetailsResponse>
        <subRecieptDtls>
          <out4:payload>
            <!-- a simple data mapping: "$smo/context/correlation/crsno"(string) to "out4:crsNo"(string) -->
            <xsl:if test="$smo/context/correlation/crsno">
              <xsl:element name="out4:crsNo">
                <xsl:value-of select="$smo/context/correlation/crsno"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/authCode"(string) to "out4:authCode"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/authCode">
              <xsl:element name="out4:authCode">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/authCode"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/txtStatus"(string) to "out4:crsStatus"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/txtStatus">
              <xsl:element name="out4:crsStatus">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/txtStatus"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/instrumentAmt"(string) to "out4:crsAmount"(double) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/instrumentAmt">
              <xsl:element name="out4:crsAmount">
                <!-- variables for custom code -->
                <xsl:variable name="instrumentAmt" select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/instrumentAmt"/>
                <xsl:value-of select="MapUtils:stringToDouble($instrumentAmt, '0.0')"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptPayerType"(string) to "out4:payerType"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptPayerType">
              <xsl:element name="out4:payerType">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptPayerType"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/insuredName"(string) to "out4:payeeName"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/insuredName">
              <xsl:element name="out4:payeeName">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/insuredName"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentModeCd"(string) to "out4:paymentReceivedMethod"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentModeCd">
              <xsl:element name="out4:paymentReceivedMethod">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentModeCd"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankName"(string) to "out4:payeeBank"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankName">
              <xsl:element name="out4:payeeBank">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankName"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankIFSC"(string) to "out4:payeeIfscCode"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankIFSC">
              <xsl:element name="out4:payeeIfscCode">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankIFSC"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankAccNo"(string) to "out4:payeeBankAccountNo"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankAccNo">
              <xsl:element name="out4:payeeBankAccountNo">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankAccNo"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/totalAmount"(double) to "out4:totalAmount"(double) -->
            <xsl:if test="$smo/context/correlation/totalAmount">
              <xsl:element name="out4:totalAmount">
                <xsl:value-of select="$smo/context/correlation/totalAmount"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/balanceAmt"(string) to "out4:balanceAmount"(double) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/balanceAmt">
              <xsl:element name="out4:balanceAmount">
                <!-- variables for custom code -->
                <xsl:variable name="balanceAmt" select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/balanceAmt"/>
                <xsl:value-of select="MapUtils:stringToDouble($balanceAmt, '0.0')"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/insuredID"(string) to "out4:CRSPayerID"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/insuredID">
              <xsl:element name="out4:CRSPayerID">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/insuredID"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentSource"(string) to "out4:payementSource"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentSource">
              <xsl:element name="out4:payementSource">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentSource"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/housebankname"(string) to "out4:houseBankName"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/housebankname">
              <xsl:element name="out4:houseBankName">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/housebankname"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/housebankAccno"(string) to "out4:houseBankAccountNo"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/housebankAccno">
              <xsl:element name="out4:houseBankAccountNo">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/housebankAccno"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/taggedAmt"(string) to "out4:taggedAmount"(double) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/taggedAmt">
              <xsl:element name="out4:taggedAmount">
                <!-- variables for custom code -->
                <xsl:variable name="taggedAmt" select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/taggedAmt"/>
                <xsl:value-of select="MapUtils:stringToDouble($taggedAmt, '0.0')"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/policyNumbers"(string) to "out4:policyNumbers"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/policyNumbers">
              <xsl:element name="out4:policyNumbers">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/policyNumbers"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentMode"(string) to "out4:payementMode"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentMode">
              <xsl:element name="out4:payementMode">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/paymentMode"/>
              </xsl:element>
            </xsl:if>
            <out4:accountDetails>
              <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankName"(string) to "out4:customerBank"(string) -->
              <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankName">
                <xsl:element name="out4:customerBank">
                  <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankName"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankIFSC"(string) to "out4:customerIfscCode"(string) -->
              <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankIFSC">
                <xsl:element name="out4:customerIfscCode">
                  <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankIFSC"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankAccNo"(string) to "out4:bankAccountNo"(string) -->
              <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankAccNo">
                <xsl:element name="out4:bankAccountNo">
                  <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/bankAccNo"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/email"(string) to "out4:emailId"(string) -->
              <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/email">
                <xsl:element name="out4:emailId">
                  <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/email"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/contact"(string) to "out4:contactNo"(string) -->
              <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/contact">
                <xsl:element name="out4:contactNo">
                  <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/contact"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress1"(string) to "out4:addressLine1"(string) -->
              <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress1">
                <xsl:element name="out4:addressLine1">
                  <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress1"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress2"(string) to "out4:addressLine2"(string) -->
              <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress2">
                <xsl:element name="out4:addressLine2">
                  <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress2"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress3"(string) to "out4:addressLine3"(string) -->
              <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress3">
                <xsl:element name="out4:addressLine3">
                  <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/payerAddress3"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/state"(string) to "out4:state"(string) -->
              <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/state">
                <xsl:element name="out4:state">
                  <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/state"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/city"(string) to "out4:city"(string) -->
              <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/city">
                <xsl:element name="out4:city">
                  <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/city"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/area"(string) to "out4:area"(string) -->
              <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/area">
                <xsl:element name="out4:area">
                  <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/area"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/pincode"(string) to "out4:pincode"(string) -->
              <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/pincode">
                <xsl:element name="out4:pincode">
                  <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/pincode"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/landmark"(string) to "out4:landmark"(string) -->
              <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/landmark">
                <xsl:element name="out4:landmark">
                  <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/landmark"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/district"(string) to "out4:district"(string) -->
              <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/district">
                <xsl:element name="out4:district">
                  <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/district"/>
                </xsl:element>
              </xsl:if>
            </out4:accountDetails>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/subReceiptNumbers"(string) to "out4:subreceiptNumbers"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/subReceiptNumbers">
              <xsl:element name="out4:subreceiptNumbers">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/subReceiptNumbers"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptDate"(string) to "out4:receiptDate"(dateTime) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptDate">
              <xsl:element name="out4:receiptDate">
                <!-- variables for custom code -->
                <xsl:variable name="receiptDate" select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptDate"/>
                <xsl:value-of select="MapUtils:stringToDateTime($receiptDate, '2002-01-01T11:00:00')"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/drawerName"(string) to "out4:drawerName"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/drawerName">
              <xsl:element name="out4:drawerName">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/drawerName"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptLAN"(string) to "out4:receiptLANNo"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptLAN">
              <xsl:element name="out4:receiptLANNo">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptLAN"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptAppNo"(string) to "out4:receiptApplicationNo"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptAppNo">
              <xsl:element name="out4:receiptApplicationNo">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptAppNo"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptAccNo"(string) to "out4:receiptAccountNo"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptAccNo">
              <xsl:element name="out4:receiptAccountNo">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptAccNo"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptIFSC"(string) to "out4:receiptIFSCCode"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptIFSC">
              <xsl:element name="out4:receiptIFSCCode">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptIFSC"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/lob"(string) to "out4:lob"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/lob">
              <xsl:element name="out4:lob">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/lob"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/cdNumber"(string) to "out4:cdAcccountNumber"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/cdNumber">
              <xsl:element name="out4:cdAcccountNumber">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/cdNumber"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptPayerName"(string) to "out4:receiptPayerName"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptPayerName">
              <xsl:element name="out4:receiptPayerName">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/receiptPayerName"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/instrumentDate"(string) to "out4:instrumentDate"(dateTime) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/instrumentDate">
              <xsl:element name="out4:instrumentDate">
                <!-- variables for custom code -->
                <xsl:variable name="instrumentDate" select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/instrumentDate"/>
                <xsl:value-of select="MapUtils:stringToDateTime($instrumentDate, '2002-01-01T11:00:00')"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimIFSCCode"(string) to "out4:claimIFSCCode"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimIFSCCode">
              <xsl:element name="out4:claimIFSCCode">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimIFSCCode"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimAcctNo"(string) to "out4:claimAccountNo"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimAcctNo">
              <xsl:element name="out4:claimAccountNo">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimAcctNo"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimBankName"(string) to "out4:claimBankName"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimBankName">
              <xsl:element name="out4:claimBankName">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimBankName"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimEmailID"(string) to "out4:claimEmailID"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimEmailID">
              <xsl:element name="out4:claimEmailID">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimEmailID"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimMobileNo"(string) to "out4:claimMobileNo"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimMobileNo">
              <xsl:element name="out4:claimMobileNo">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimMobileNo"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimClaimantName"(string) to "out4:claimantName"(string) -->
            <xsl:if test="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimClaimantName">
              <xsl:element name="out4:claimantName">
                <xsl:value-of select="$smo/body/in3:fetchSubReceiptDetailsResponse/in3:FetchSubReceiptDetailsResult/claimClaimantName"/>
              </xsl:element>
            </xsl:if>
          </out4:payload>
        </subRecieptDtls>
      </out3:findSubReceiptDetailsResponse>
    </body>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
