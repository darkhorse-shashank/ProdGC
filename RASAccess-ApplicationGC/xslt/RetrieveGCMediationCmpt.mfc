<?xml version="1.0" encoding="UTF-8"?>
<mediationFlow xmlns="http://www.ibm.com/xmlns/prod/websphere/2010/MediationFlow" xmlns:RASAIGService="http://stub.tagicesb.com/wsdl/RASAIGService/" xmlns:RASAviationService="http://stub.tagicesb.com/wsdl/RASAviation/" xmlns:RASCasualtyService="http://stub.tagicesb.com/wsdl/RASCasualty/" xmlns:RASFinancialLinesService="http://stub.unotechsoft.com/wsdl/RASFinancialLines/" xmlns:RASGenericService="http://stub.tagicesb.com/wsdl/RASGenericService/" xmlns:RASHealthService="http://stub.tagicesb.com/wsdl/RASHealthService/" xmlns:RASHomeService="http://stub.tagicesb.com/wsdl/RASHome/" xmlns:RASLTAService="http://stub.unotechsoft.com/wsdl/RASLTAService/" xmlns:RASMarineService="http://stub.tagicesb.com/wsdl/RASMarineService/" xmlns:RASMotorService="http://stub.unotechsoft.com/wsdl/RASMotor/" xmlns:RASPAService="http://stub.tagicesb.com/wsdl/RASPAService/" xmlns:RASPersonalLinesService="http://stub.unotechsoft.com/wsdl/RASPersonalLines/" xmlns:RASPropertyEnergyService="http://stub.unotechsoft.com/wsdl/RASPropertyEnergyService/" xmlns:RASTradeCreditService="http://com.tagic.esb.RASTradeCreditStub/wsdl/RASTradeCreditService/" xmlns:UpdateGCTransactionLog="http://GCLibrary/org/aig/access/UpdateGCTransactionLog" xmlns:XMLSchema="http://www.w3.org/2001/XMLSchema" xmlns:mfcex="http://www.ibm.com/xmlns/prod/websphere/2010/MediationFlowExtension" xmlns:ns3="http://GCDomain-v1.0.0/org/tataaig/access/RetrieveAccessGC" xmlns:ns34="http://stub.unotechsoft.com/wsdl/RASRefundCancellationKhoka/" xmlns:ns4="http://stub.unotechsoft.com/wsdl/DBService/" name="RetrieveGCMediationCmpt" targetNamespace="http://Access-ApplicationGC/xslt/RetrieveGCMediationCmpt">
  <import location="org/aig/access/RetrieveAccessGC.wsdl" namespace="http://GCDomain-v1.0.0/org/tataaig/access/RetrieveAccessGC"/>
  <import location="_126/_251/_20/_172/cxf/databasefetchservice_wsdl.wsdl" namespace="http://stub.unotechsoft.com/wsdl/DBService/"/>
  <import location="_126/_251/_20/_172/cxf/rasgenericservice_wsdl.wsdl" namespace="http://stub.tagicesb.com/wsdl/RASGenericService/"/>
  <import location="_11/_4/_35/_10/cxf/rasmotorservice_wsdl.wsdl" namespace="http://stub.unotechsoft.com/wsdl/RASMotor/"/>
  <import location="_126/_251/_20/_172/cxf/rashealthservice_wsdl.wsdl" namespace="http://stub.tagicesb.com/wsdl/RASHealthService/"/>
  <import location="_126/_251/_20/_172/cxf/rasltaservice_wsdl.wsdl" namespace="http://stub.unotechsoft.com/wsdl/RASLTAService/"/>
  <import location="_126/_251/_20/_172/cxf/raspaservice_wsdl.wsdl" namespace="http://stub.tagicesb.com/wsdl/RASPAService/"/>
  <import location="_126/_251/_20/_172/cxf/rashomeservice_wsdl.wsdl" namespace="http://stub.tagicesb.com/wsdl/RASHome/"/>
  <import location="_126/_251/_20/_172/cxf/rasfinanciallinesservice_wsdl.wsdl" namespace="http://stub.unotechsoft.com/wsdl/RASFinancialLines/"/>
  <import location="_126/_251/_20/_172/cxf/raspersonallinesservice_wsdl.wsdl" namespace="http://stub.unotechsoft.com/wsdl/RASPersonalLines/"/>
  <import location="_126/_251/_20/_172/cxf/rastradecreditservice_wsdl.wsdl" namespace="http://com.tagic.esb.RASTradeCreditStub/wsdl/RASTradeCreditService/"/>
  <import location="_126/_251/_20/_172/cxf/rasmarineservice_wsdl.wsdl" namespace="http://stub.tagicesb.com/wsdl/RASMarineService/"/>
  <import location="_126/_251/_20/_172/cxf/rasaigservice_wsdl.wsdl" namespace="http://stub.tagicesb.com/wsdl/RASAIGService/"/>
  <import location="_126/_251/_20/_172/cxf/rasaviationservice_wsdl.wsdl" namespace="http://stub.tagicesb.com/wsdl/RASAviation/"/>
  <import location="_126/_251/_20/_172/cxf/rascasualtyservice_wsdl.wsdl" namespace="http://stub.tagicesb.com/wsdl/RASCasualty/"/>
  <import location="_126/_251/_20/_172/cxf/raspropertyenergyservice_wsdl.wsdl" namespace="http://stub.unotechsoft.com/wsdl/RASPropertyEnergyService/"/>
  <import location="org/aig/access/UpdateGCTransactionLog.wsdl" namespace="http://GCLibrary/org/aig/access/UpdateGCTransactionLog"/>
  <import location="_126/_251/_20/_172/cxf/rasrefundcancellationkhokaservice_wsdl.wsdl" namespace="http://stub.unotechsoft.com/wsdl/RASRefundCancellationKhoka/"/>
  <promotedProperty name="findPolicyDetailsRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findPolicyDetailsRequestLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="findPolicyDetailsResponseLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findPolicyDetailsResponseLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="findPolicyDetailsFaultLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findPolicyDetailsFaultLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="findPolicyDetailsErrorLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findPolicyDetailsErrorLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="findReceiptsRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findReceiptsRequestLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="findReceiptsResponseLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findReceiptsResponseLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="findReceiptsFaultLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findReceiptsFaultLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="findReceiptsErrorLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findReceiptsErrorLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="Callout1.retryOn" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="Callout1.retryCount" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="Callout1.retryDelay" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="findRefundStatusRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findRefundStatusRequestLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="ServiceInvoke1.retryOn6" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryCount6" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryDelay6" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="findRefundStatusResponseLogger.enabled1" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findRefundStatusResponseLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="findRefundStatusFaultLogger.enabled1" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findRefundStatusFaultLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="ServiceInvoke1.retryOn8" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryCount8" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryDelay8" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="findRefundStatusErrorLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findRefundStatusErrorLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="ServiceInvoke1.retryOn9" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryCount9" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryDelay9" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="calculatePremiumMotorRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumMotorRequestLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="logs.txt"/>
  <promotedProperty name="calculatePremiumTravel_LTARequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumTravel_LTARequestLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="D:\Sasidhar\RAS\logs.txt"/>
  <promotedProperty name="calculatePremiumHealthRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumHealthRequestLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="logs.txt"/>
  <promotedProperty name="calculatePremiumHomeRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumHomeRequestLogger.file" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="calculatePremiumPersonalAccidentRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumPersonalAccidentRequestLogger.file1" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="calculatePremiumFinancialLinesRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumFinancialLinesRequestLogger.file1" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="calculatePremiumTradeCreditRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumTradeCreditRequestLogger.file" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="calculatePremiumPersonallLinesRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumPersonallLinesRequestLogger.file" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="calculatePremiumMarineCargoRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumMarineCargoRequestLogger.file" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="calculatePremiumAigCombinedRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumAigCombinedRequestLogger.file" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="calculatePremiumAviationRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumAviationRequestLogger.file1" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="calculatePremiumLiabilityRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumLiabilityRequestLogger.file1" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="calculatePremiumPropertyandEnergyRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumPropertyandEnergyRequestLogger.file" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="ServiceInvoke1.retryOn" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryCount" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryDelay" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="Callout1.retryOn1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="Callout1.retryCount1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="Callout1.retryDelay1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="CalculatePremium_KhokhaService.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="RASLog.txt"/>
  <promotedProperty name="calculatePremiumResponseLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumResponseLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="log.txt"/>
  <promotedProperty name="calculatePremiumFaultLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumFaultLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="log.txt"/>
  <promotedProperty name="ServiceInvoke1.retryOn1" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryCount1" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryDelay1" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="calculatePremiumErrorLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="calculatePremiumErrorLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="log.txt"/>
  <promotedProperty name="ServiceInvoke1.retryOn2" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryCount2" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryDelay2" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="findPolicyStatusRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findPolicyStatusRequestLogger.file" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="ServiceInvoke1.retryOn3" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryCount3" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryDelay3" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="findPolicyStatusResponseLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findPolicyStatusResponseLogger.file1" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="ServiceInvoke1.retryOn4" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryCount4" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryDelay4" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="findPolicyStatusFaultLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findPolicyStatusFaultLogger.file" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="findPolicyStatusErrorLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findPolicyStatusErrorLogger.file" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="ServiceInvoke1.retryOn5" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryCount5" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ServiceInvoke1.retryDelay5" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="findProposalsRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findProposalsRequestLogger.file" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="findProposalsResponseLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findProposalsResponseLogger.file" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="findProposalsFaultLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findProposalsFaultLogger.file" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="findProposalsErrorLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findProposalsErrorLogger.file" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
  <promotedProperty name="findMainReceiptDetailsRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findMainReceiptDetailsRequestLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="findMainReceiptDetailsResponseLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findMainReceiptDetailsResponseLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="findMainReceiptDetailsFaultLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findMainReceiptDetailsFaultLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="findMainReceiptDetailsErrorLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findMainReceiptDetailsErrorLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="findSubReceiptDetailsRequestLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findSubReceiptDetailsRequestLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="findSubReceiptDetailsResponseLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findSubReceiptDetailsResponseLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="findSubReceiptDetailsFaultLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findSubReceiptDetailsFaultLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="findSubReceiptDetailsErrorLogger.enabled" group="Access-ApplicationGC.RetrieveGCMediationCmpt" value="true"/>
  <promotedProperty name="findSubReceiptDetailsErrorLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="GCLogs03112021.txt"/>
  <promotedProperty name="RASGenericServicePartner_getDetailsOfCDRefund_Callout.retryOn" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_getDetailsOfCDRefund_Callout.retryCount" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_getDetailsOfCDRefund_Callout.retryDelay" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_getRASEmiDetails_Callout.retryOn" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_getRASEmiDetails_Callout.retryCount" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_getRASEmiDetails_Callout.retryDelay" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="GetEMIDetailsEMIInputLogger.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="D:/Sasidhar/RAS/logs.txt"/>
  <promotedProperty name="getEMIDetailsOutputLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="D:/Sasidhar/RAS/logs.txt"/>
  <promotedProperty name="GetRASEMIDetailsExceptionMap.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="D:/Sasidhar/RAS/logs.txt"/>
  <promotedProperty name="RASGenericServicePartner_receiptEMIDetails_Callout.retryOn" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_receiptEMIDetails_Callout.retryCount" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_receiptEMIDetails_Callout.retryDelay" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="ExcessRefundEMIInputLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="F:/Sasidhar/logs.txt"/>
  <promotedProperty name="ExcessRefundEMIOutputLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="F:/Sasidhar/logs.txt"/>
  <promotedProperty name="ExcessRefundExceptionMap.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="F:/Sasidhar/logs.txt"/>
  <promotedProperty name="RASGenericServicePartner_rasPolicyEndoData_Callout.retryOn" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_rasPolicyEndoData_Callout.retryCount" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_rasPolicyEndoData_Callout.retryDelay" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="PolicyEndoDataInputLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="F:/Sasidhar/logs.txt"/>
  <promotedProperty name="PolicyEndoDataOutputLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="F:/Sasidhar/logs.txt"/>
  <promotedProperty name="PolicyEndoExceptionLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="F:/Sasidhar/logs.txt"/>
  <promotedProperty name="RASGenericServicePartner_fetchPropReceiptsRAS_Callout.retryOn" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_fetchPropReceiptsRAS_Callout.retryCount" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_fetchPropReceiptsRAS_Callout.retryDelay" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="Trace1.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="D:/Sasidhar/Old Backup/RAS/logs/logs.txt"/>
  <promotedProperty name="Trace1.file1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="D:/Sasidhar/Old Backup/RAS/logs/logs.txt"/>
  <promotedProperty name="Trace1.file2" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="D:/Sasidhar/Old Backup/RAS/logs/logs.txt"/>
  <promotedProperty name="RASGenericServicePartner_tenureDetails_Callout.retryOn" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_tenureDetails_Callout.retryCount" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_tenureDetails_Callout.retryDelay" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="TenureDetailsInputLog.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="RASLog.txt"/>
  <promotedProperty name="Trace1.file3" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="RASLog.txt"/>
  <promotedProperty name="RASGenericServicePartner_fetchCDDetailsRAS_Callout.retryOn" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_fetchCDDetailsRAS_Callout.retryCount" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_fetchCDDetailsRAS_Callout.retryDelay" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="GetCDDetailsAccInputLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="IIDLogs.txt"/>
  <promotedProperty name="GetCDDetailsOutputLog.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="IIDLogs.txt"/>
  <promotedProperty name="CDAccDetailsErrorLog.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="IIDLogs.txt"/>
  <promotedProperty name="RASGenericServicePartner_policyDetailsByProposalNo_Callout.retryOn" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_policyDetailsByProposalNo_Callout.retryCount" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_policyDetailsByProposalNo_Callout.retryDelay" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="BalanceRefundProposalInputLogger.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="IIDLogs.txt"/>
  <promotedProperty name="getPropDetailBalanceExceptionLog.file" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="IIDLogs.txt"/>
  <promotedProperty name="RASGenericServicePartner_fetchPolicy_Callout.retryOn1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_fetchPolicy_Callout.retryCount1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="RASGenericServicePartner_fetchPolicy_Callout.retryDelay1" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="0"/>
  <promotedProperty name="Trace1.file4" group="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" value="Logs.txt"/>
  <reference name="DBServicePartner" portType="ns4:DBService"/>
  <reference name="RASGenericServicePartner" portType="RASGenericService:RASGenericService"/>
  <reference name="RASMotorServicePartner" portType="RASMotorService:RASMotorService"/>
  <reference name="RASHealthServicePartner" portType="RASHealthService:RASHealthService"/>
  <reference name="RASLTAServicePartner" portType="RASLTAService:RASLTAService"/>
  <reference name="RASPAServicePartner" portType="RASPAService:RASPAService"/>
  <reference name="RASHomeServicePartner" portType="RASHomeService:RASHomeService"/>
  <reference name="RASFinancialLinesServicePartner" portType="RASFinancialLinesService:RASFinancialLinesService"/>
  <reference name="RASPersonalLinesServicePartner" portType="RASPersonalLinesService:RASPersonalLinesService"/>
  <reference name="RASTradeCreditServicePartner" portType="RASTradeCreditService:RASTradeCreditService"/>
  <reference name="RASMarineServicePartner" portType="RASMarineService:RASMarineService"/>
  <reference name="RASAIGServicePartner" portType="RASAIGService:RASAIGService"/>
  <reference name="RASAviationServicePartner" portType="RASAviationService:RASAviationService"/>
  <reference name="RASCasualtyServicePartner" portType="RASCasualtyService:RASCasualtyService"/>
  <reference name="RASPropertyEnergyServicePartner" portType="RASPropertyEnergyService:RASPropertyEnergyService"/>
  <reference name="UpdateGCTransactionLogPartner" portType="UpdateGCTransactionLog:UpdateGCTransactionLog"/>
  <reference name="RASRefundCancellationKhokaServicePartner" portType="ns34:RASRefundCancellationKhokaService"/>
  <interface portType="ns3:RetrieveAccessGC">
    <operation name="findPolicyDetails">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <node displayName="findPolicyDetails : RetrieveAccessGC" name="RetrieveAccessGC_findPolicyDetails_Input" type="Input">
          <property name="correlationContext" value="{http://Access-ApplicationGC}correlationBO"/>
          <outputTerminal type="ns3:findPolicyDetailsRequestMsg">
            <wire targetNode="find_PolicyDetails_InputMap"/>
          </outputTerminal>
        </node>
        <node displayName="policyDetails : RASGenericServicePartner" name="RASGenericServicePartner_policyDetails_Callout" type="Callout">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="policyDetails"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASGenericService:policyDetails"/>
        </node>
        <node name="findPolicyDetailsRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyDetailsRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyDetailsRequestLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASGenericServicePartner_policyDetails_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="find_PolicyDetails_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_PolicyDetails_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/find_PolicyDetails_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:findPolicyDetailsRequestMsg"/>
          <outputTerminal type="RASGenericService:policyDetails">
            <wire targetNode="findPolicyDetailsRequestLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </requestFlow>
      <responseFlow>
        <node displayName="policyDetails : RASGenericServicePartner" name="RASGenericServicePartner_policyDetails_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="policyDetails"/>
          <outputTerminal type="RASGenericService:policyDetailsResponse">
            <wire targetNode="Status_Filter"/>
          </outputTerminal>
          <failTerminal type="RASGenericService:policyDetails"/>
        </node>
        <node displayName="findPolicyDetails : RetrieveAccessGC" name="RetrieveAccessGC_findPolicyDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findPolicyDetailsResponseMsg"/>
        </node>
        <node displayName="findPolicyDetails : RetrieveAccessGC" name="RetrieveAccessGC_findPolicyDetails_InputFault" type="InputFault">
          <inputTerminal name="findPolicyDetails_findPolicyDetailsFaultMsg" type="ns3:findPolicyDetails_findPolicyDetailsFaultMsg"/>
        </node>
        <node displayName="Status Filter" name="Status_Filter" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[Status = 'SUCCESS']/Status"/>
              <property name="terminalName" value="match1"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="find_PolicyDetails_FaultMap"/>
          </outputTerminal>
          <outputTerminal displayName="Success" name="match1">
            <wire targetNode="Response_Transformation"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="find_PolicyDetails_OutputMap" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/find_PolicyDetails_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/find_PolicyDetails_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:policyDetailsResponse"/>
          <outputTerminal type="ns3:findPolicyDetailsResponseMsg">
            <wire targetNode="findPolicyDetailsResponseLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="Response Transformation" name="Response_Transformation" type="CustomMediation">
          <property name="javaCode"><![CDATA[
 try{
  Date date = null;
  String formattedDate = null;
  String appDate = smo.getString("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/ApplicationDate");
  String policyStartDate = smo.getString("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/PolicyStartDate");
  String policyEndDate = smo.getString("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/PolicyEndDate");
  String conversionDate = smo.getString("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/ConversionDate");
  DateFormat originalFormat = new SimpleDateFormat("dd/MM/yyyy");
  DateFormat targetFormat = new SimpleDateFormat("yyyy-MM-dd");
  if(appDate!=null&&appDate!="")
  {
  date = originalFormat.parse(appDate);
  formattedDate = targetFormat.format(date); 
  smo.setString("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/ApplicationDate",formattedDate);
  }
  else
  {
  smo.setString("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/ApplicationDate",null);
  }
  if(policyStartDate!=null&&policyStartDate!="")
  {
  date = originalFormat.parse(policyStartDate);
  formattedDate = targetFormat.format(date); 
  smo.setString("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/PolicyStartDate",formattedDate);
  }
  else
  {
  smo.setString("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/PolicyStartDate",null);
  }
  if(policyEndDate!=null&&policyEndDate!="")
  {
  date = originalFormat.parse(policyEndDate);
  formattedDate = targetFormat.format(date); 
  smo.setString("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/PolicyEndDate",formattedDate);
  }
  else
  {
   smo.setString("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/PolicyEndDate",null);
  }
  if(conversionDate!=null&&conversionDate!="")
  {
  date = originalFormat.parse(conversionDate);
  formattedDate = targetFormat.format(date); 
  smo.setString("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/conversionDate",formattedDate);
  }
  else
  {
   smo.setString("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/conversionDate",null);
  }
  int size = smo.getList("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/objInsuredDetails/InsuredDetails").size();
  List InsuredList = new ArrayList();
  int empty = 0;
  for(int i=1;i<=size;i++)
  {
   InsuredList.add(smo.getDataObject("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/objInsuredDetails/InsuredDetails["+i+"]"));
  }
  Iterator iterator = InsuredList.iterator();
    while(iterator.hasNext()){			
      DataObject current = (DataObject)iterator.next();
      String name = current.getString("InsuredName");
      String dob = current.getString("InsuredDOB");
      String address = current.getString("InsuredContAdd");
      String cNo = current.getString("InsuredContNo");
      
      
    if(!(name==null || name.isEmpty() || "".equalsIgnoreCase(name.trim()))) {
        empty++;
    }
    
    if(!(dob==null || dob.isEmpty() || "".equalsIgnoreCase(dob.trim()))) {
        empty++;
    }
   
    if(!(address==null || address.isEmpty() || "".equalsIgnoreCase(address.trim()))) {
        empty++;
    }
   
    if(!(cNo==null || cNo.isEmpty() || "".equalsIgnoreCase(cNo.trim()))) {
        empty++;
    }
  
    if(empty ==0){
      iterator.remove();
    }
  }
  smo.setList("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/objInsuredDetails/InsuredDetails",InsuredList);
  
  int receiptSize = smo.getList("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/objCRSDetails/CRSDetails").size();
  List ReceiptList = new ArrayList();
  for(int i=1;i<=size;i++)
  {
   ReceiptList.add(smo.getDataObject("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/objCRSDetails/CRSDetails["+i+"]"));
  }
   Iterator receiptIterator = ReceiptList.iterator();
   Boolean receiptEmpty = false;
   while(receiptIterator.hasNext()){			
      DataObject current = (DataObject)receiptIterator.next();
      String crsNo = current.getString("CRS");
      System.out.println("crsNo "+crsNo);
      if(crsNo==null || crsNo.isEmpty() || "".equalsIgnoreCase(crsNo.trim())) {
        receiptEmpty  = true;
      }
      System.out.println(receiptEmpty);
      if(receiptEmpty){
      receiptIterator.remove();
      }
   }
  smo.setList("/body/policyDetailsResponse/PolicyDetailsResponse/PolicyDetailsResult/PolicyDetails[1]/objCRSDetails/CRSDetails",ReceiptList);
  
  
  
  out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
 }
 catch(Exception e){
    e.printStackTrace();
 }
    
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1579510292900"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="java.text.DateFormat;java.text.SimpleDateFormat;java.util.*;commonj.sdo.DataObject"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASGenericService:policyDetailsResponse">
            <wire targetNode="find_PolicyDetails_OutputMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findPolicyDetailsResponseLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyDetailsResponseLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyDetailsResponseLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findPolicyDetails_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="find_PolicyDetails_FaultMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_PolicyDetails_FaultMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/find_PolicyDetails_FaultMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:policyDetailsResponse"/>
          <outputTerminal type="ns3:findPolicyDetails_findPolicyDetailsFaultMsg">
            <wire targetNode="findPolicyDetailsFaultLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findPolicyDetailsFaultLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyDetailsFaultLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyDetailsFaultLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findPolicyDetails_InputFault" targetTerminal="findPolicyDetails_findPolicyDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="findPolicyDetails : RetrieveAccessGC" name="RetrieveAccessGC_findPolicyDetails_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="find_PolicyDetails_ErrorMap"/>
          </outputTerminal>
        </node>
        <node displayName="findPolicyDetails : RetrieveAccessGC" name="RetrieveAccessGC_findPolicyDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findPolicyDetailsResponseMsg"/>
        </node>
        <node displayName="findPolicyDetails : RetrieveAccessGC" name="RetrieveAccessGC_findPolicyDetails_InputFault" type="InputFault">
          <inputTerminal name="findPolicyDetails_findPolicyDetailsFaultMsg" type="ns3:findPolicyDetails_findPolicyDetailsFaultMsg"/>
        </node>
        <node name="findPolicyDetailsErrorLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyDetailsErrorLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyDetailsErrorLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findPolicyDetails_InputFault" targetTerminal="findPolicyDetails_findPolicyDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="find_PolicyDetails_ErrorMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_PolicyDetails_ErrorMap_err_1.xsl"/>
          <property name="XMXMap" value="xslt/find_PolicyDetails_ErrorMap_err_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:findPolicyDetails_findPolicyDetailsFaultMsg">
            <wire targetNode="findPolicyDetailsErrorLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </errorFlow>
    </operation>
    <operation name="findReceipts">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <node displayName="findReceipts : RetrieveAccessGC" name="RetrieveAccessGC_findReceipts_Input" type="Input">
          <property name="correlationContext" value="{http://Access-ApplicationGC}correlationBO"/>
          <outputTerminal type="ns3:findReceiptsRequestMsg">
            <wire targetNode="find_Receipts_InputMap"/>
          </outputTerminal>
        </node>
        <node name="find_Receipts_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_Receipts_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/find_Receipts_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:findReceiptsRequestMsg"/>
          <outputTerminal type="RASGenericService:receiptDetails">
            <wire targetNode="findReceiptsRequestLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findReceiptsRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findReceiptsRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findReceiptsRequestLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASGenericServicePartner_receiptDetails_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="receiptDetails : RASGenericServicePartner" name="RASGenericServicePartner_receiptDetails_Callout" type="Callout">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="receiptDetails"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASGenericService:receiptDetails"/>
        </node>
      </requestFlow>
      <responseFlow>
        <node displayName="receiptDetails : RASGenericServicePartner" name="RASGenericServicePartner_receiptDetails_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="receiptDetails"/>
          <outputTerminal type="RASGenericService:receiptDetailsResponse">
            <wire targetNode="Status_Filter"/>
          </outputTerminal>
          <failTerminal type="RASGenericService:receiptDetails"/>
        </node>
        <node displayName="findReceipts : RetrieveAccessGC" name="RetrieveAccessGC_findReceipts_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findReceiptsResponseMsg"/>
        </node>
        <node displayName="findReceipts : RetrieveAccessGC" name="RetrieveAccessGC_findReceipts_InputFault" type="InputFault">
          <inputTerminal name="findReceipts_findReceiptsFaultMsg" type="ns3:findReceipts_findReceiptsFaultMsg"/>
        </node>
        <node displayName="Status Filter" name="Status_Filter" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/receiptDetailsResponse/ReceiptDetailsResult/ReceiptDetails/Status = 'SUCCESS'"/>
              <property name="terminalName" value="match1"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="find_Receipts_FaultMap"/>
          </outputTerminal>
          <outputTerminal displayName="Success" name="match1">
            <wire targetNode="Receipt_Date"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="find_Receipts_OutputMap" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/find_Receipts_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/find_Receipts_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:receiptDetailsResponse"/>
          <outputTerminal type="ns3:findReceiptsResponseMsg">
            <wire targetNode="findReceiptsResponseLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findReceiptsResponseLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findReceiptsResponseLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findReceiptsResponseLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findReceipts_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="find_Receipts_FaultMap" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/find_Receipts_FaultMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/find_Receipts_FaultMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:receiptDetailsResponse"/>
          <outputTerminal type="ns3:findReceipts_findReceiptsFaultMsg">
            <wire targetNode="findReceiptsFaultLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findReceiptsFaultLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findReceiptsFaultLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findReceiptsFaultLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findReceipts_InputFault" targetTerminal="findReceipts_findReceiptsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="Receipt Date" name="Receipt_Date" type="CustomMediation">
          <property name="javaCode"><![CDATA[
     try{
        int size = smo.getList("/body/receiptDetailsResponse/ReceiptDetailsResult/ReceiptDetails").size();
       
        for(int i=1;i<=size;i++)
        {
        System.out.println("Size "+size+" Iteration "+i);
        String date = smo.getString("/body/receiptDetailsResponse/ReceiptDetailsResult/ReceiptDetails["+i+"]/ReceiptDate");
        DateFormat originalFormat = new SimpleDateFormat("dd/MM/yyyy");
		DateFormat targetFormat = new SimpleDateFormat("yyyy-MM-dd");
		System.out.println(" i Value "+i);
		System.out.println("receipt date "+date);
		if(date!=null&&date!="")
        {
		Date date1 = originalFormat.parse(date);
		String formattedDate = targetFormat.format(date1); 
		System.out.println("formatted receipt date "+formattedDate);
		smo.setString("/body/receiptDetailsResponse/ReceiptDetailsResult/ReceiptDetails["+i+"]/ReceiptDate",formattedDate);
		}
		else
		smo.setString("/body/receiptDetailsResponse/ReceiptDetailsResult/ReceiptDetails["+i+"]/ReceiptDate",null);
		}
        out.fire(smo);
        }
        catch(Exception e){
        e.printStackTrace();
        } // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1584508753402"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="java.text.DateFormat;java.text.SimpleDateFormat;java.util.*"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASGenericService:receiptDetailsResponse">
            <wire targetNode="find_Receipts_OutputMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="findReceipts : RetrieveAccessGC" name="RetrieveAccessGC_findReceipts_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="find_Receipts_ErrorMap"/>
          </outputTerminal>
        </node>
        <node displayName="findReceipts : RetrieveAccessGC" name="RetrieveAccessGC_findReceipts_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findReceiptsResponseMsg"/>
        </node>
        <node displayName="findReceipts : RetrieveAccessGC" name="RetrieveAccessGC_findReceipts_InputFault" type="InputFault">
          <inputTerminal name="findReceipts_findReceiptsFaultMsg" type="ns3:findReceipts_findReceiptsFaultMsg"/>
        </node>
        <node name="find_Receipts_ErrorMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_Receipts_ErrorMap_err_1.xsl"/>
          <property name="XMXMap" value="xslt/find_Receipts_ErrorMap_err_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:findReceipts_findReceiptsFaultMsg">
            <wire targetNode="findReceiptsErrorLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findReceiptsErrorLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findReceiptsErrorLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findReceiptsErrorLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findReceipts_InputFault" targetTerminal="findReceipts_findReceiptsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </errorFlow>
    </operation>
    <operation name="findRefundStatus">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <node displayName="findRefundStatus : RetrieveAccessGC" name="RetrieveAccessGC_findRefundStatus_Input" type="Input">
          <property name="correlationContext" value="{http://Access-ApplicationGC}correlationBO"/>
          <outputTerminal type="ns3:findRefundStatusRequestMsg">
            <wire targetNode="AssignTransactionId"/>
          </outputTerminal>
        </node>
        <node displayName="refundRequestStatus : RASGenericServicePartner" name="RASGenericServicePartner_refundRequestStatus_Callout" type="Callout">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="refundRequestStatus"/>
          <property name="invocationStyle" value="6"/>
          <property name="retryOn" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="Callout1.retryOn"/>
          <property name="retryCount" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="Callout1.retryCount"/>
          <property name="retryDelay" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="Callout1.retryDelay"/>
          <inputTerminal type="RASGenericService:refundRequestStatus"/>
        </node>
        <node name="find_RefundStatus_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_RefundStatus_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/find_RefundStatus_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:findRefundStatusRequestMsg"/>
          <outputTerminal type="RASGenericService:refundRequestStatus">
            <wire targetNode="findRefundStatusRequestLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findRefundStatusRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findRefundStatusRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findRefundStatusRequestLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="SaveRequestStructure"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="SaveRequestStructure" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);	*/	 
System.out.println("Handling Callout Error terminal Refund Request Status");           
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
smo.setString("/context/correlation/response","");
smo.setDate("/context/correlation/lastRequestedOn",new Date());
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1597053881998"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer;java.util.*"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASGenericService:refundRequestStatus">
            <wire targetNode="RASGenericServicePartner_refundRequestStatus_Callout"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="AssignTransactionId" type="CustomMediation">
          <property name="javaCode"><![CDATA[
try{
smo.setInt("/context/correlation/transactionId",smo.getInt("/body/findRefundStatus/transactionId"));
smo.setInt("/context/correlation/isExecuting",1);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
}
catch(Exception e){
e.printStackTrace();
}

]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1597054026766"/>
          <property name="version" value="6.1.0"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="ns3:findRefundStatusRequestMsg">
            <wire targetNode="find_RefundStatus_InputMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="GCTransactionLogRequestMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/GCTransactionLogRequestMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/GCTransactionLogRequestMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="FindRefundStatusGCTransactionRequestLogService"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="FindRefundStatusGCTransactionRequestLogService" type="ServiceInvoke">
          <property name="referenceName" value="UpdateGCTransactionLogPartner"/>
          <property name="operationName" value="updateGCTransactionLog"/>
          <property name="invocationStyle" value="6"/>
          <property name="retryOn" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryOn6"/>
          <property name="retryCount" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryCount6"/>
          <property name="retryDelay" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryDelay6"/>
          <inputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg"/>
          <outputTerminal name="timeout" type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <outputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogResponseMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Stop" type="Stop">
          <inputTerminal type="XMLSchema:anyType"/>
        </node>
      </requestFlow>
      <responseFlow>
        <node displayName="findRefundStatus : RetrieveAccessGC" name="RetrieveAccessGC_findRefundStatus_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findRefundStatusResponseMsg"/>
        </node>
        <node displayName="findRefundStatus : RetrieveAccessGC" name="RetrieveAccessGC_findRefundStatus_InputFault" type="InputFault">
          <inputTerminal name="findRefundStatus_findRefundStatusFaultMsg" type="ns3:findRefundStatus_findRefundStatusFaultMsg"/>
        </node>
        <node displayName="refundRequestStatus : RASGenericServicePartner" name="RASGenericServicePartner_refundRequestStatus_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="refundRequestStatus"/>
          <outputTerminal type="RASGenericService:refundRequestStatusResponse">
            <wire targetNode="StatusFilter"/>
          </outputTerminal>
          <failTerminal type="RASGenericService:refundRequestStatus">
            <wire targetNode="Mapping"/>
          </failTerminal>
        </node>
        <node displayName="Status Filter" name="StatusFilter" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/refundRequestStatusResponse/RefundRequestStatusResponse/RefundRequestStatusResult/RefundRequestStatus/Status = 'SUCCESS'"/>
              <property name="terminalName" value="match1"/>
            </row>
            <row>
              <property name="pattern" value="/body/refundRequestStatusResponse/RefundRequestStatusResponse/RefundRequestStatusResult/RefundRequestStatus/Status = '0'"/>
              <property name="terminalName" value="match2"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="find_RefundStatus_FaultMap"/>
          </outputTerminal>
          <outputTerminal displayName="Success" name="match1">
            <wire targetNode="find_RefundStatus_OutputMap"/>
          </outputTerminal>
          <outputTerminal displayName="SuccessWith0Value" name="match2">
            <wire targetNode="find_RefundStatus_OutputMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="find_RefundStatus_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_RefundStatus_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/find_RefundStatus_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal/>
          <outputTerminal type="ns3:findRefundStatusResponseMsg">
            <wire targetNode="SaveSuccessResponseStructure"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="find_RefundStatus_FaultMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_RefundStatus_FaultMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/find_RefundStatus_FaultMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal/>
          <outputTerminal type="ns3:findRefundStatus_findRefundStatusFaultMsg">
            <wire targetNode="SaveFailedResponseStructure"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findRefundStatusResponseLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findRefundStatusResponseLogger.enabled1"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findRefundStatusResponseLogger.file" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findRefundStatus_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findRefundStatusFaultLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findRefundStatusFaultLogger.enabled1"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findRefundStatusFaultLogger.file" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findRefundStatus_InputFault" targetTerminal="findRefundStatus_findRefundStatusFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="SaveFailedResponseStructure" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*
BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);	*/	            
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/response",output);
smo.setString("/context/correlation/status","FAILED");
smo.setInt("/context/correlation/isExecuting",2);
smo.setDate("/context/correlation/lastResponseOn",new Date());
if(smo.getString("/body/findRefundStatusFault1_findRefundStatusFault/error[0]/errorCode")!=null && !"".equalsIgnoreCase(smo.getString("/body/findRefundStatusFault1_findRefundStatusFault/error[0]/errorCode")))
smo.setString("/context/correlation/errorCode",smo.getString("/body/findRefundStatusFault1_findRefundStatusFault/error[0]/errorCode"));
else
smo.setString("/context/correlation/errorCode","");
if(smo.getString("/body/findRefundStatusFault1_findRefundStatusFault/error[0]/errorDetail")!=null && !"".equalsIgnoreCase(smo.getString("/body/findRefundStatusFault1_findRefundStatusFault/error[0]/errorDetail")))
smo.setString("/context/correlation/errorDetail",smo.getString("/body/findRefundStatusFault1_findRefundStatusFault/error[0]/errorDetail"));
else
smo.setString("/context/correlation/errorDetail","");
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1597057173653"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer;java.util.*"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="ns3:findRefundStatus_findRefundStatusFaultMsg">
            <wire targetNode="findRefundStatusFaultLogger"/>
            <wire targetNode="GCTransactionLogResponseMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="SaveSuccessResponseStructure" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);		*/            
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/response",output);
smo.setInt("/context/correlation/isExecuting",0);
smo.setString("/context/correlation/status","SUCCESS");
smo.setString("/context/correlation/errorCode","");
smo.setString("/context/correlation/errorDetail","");
smo.setDate("/context/correlation/lastResponseOn",new Date());
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1597057176806"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer;java.util.*"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="ns3:findRefundStatusResponseMsg">
            <wire targetNode="findRefundStatusResponseLogger"/>
            <wire targetNode="GCTransactionLogResponseMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="GCTransactionLogResponseMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/GCTransactionLogResponseMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/GCTransactionLogResponseMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="FindRefundStatusGCTransactionResponseLogService"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="FindRefundStatusGCTransactionResponseLogService" type="ServiceInvoke">
          <property name="referenceName" value="UpdateGCTransactionLogPartner"/>
          <property name="operationName" value="updateGCTransactionLog"/>
          <property name="invocationStyle" value="6"/>
          <property name="retryOn" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryOn8"/>
          <property name="retryCount" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryCount8"/>
          <property name="retryDelay" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryDelay8"/>
          <inputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg"/>
          <outputTerminal name="timeout" type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <outputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogResponseMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Stop" type="Stop">
          <inputTerminal type="XMLSchema:anyType"/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/RefundRequestStatusCalloutErrorHandler.xsl"/>
          <property name="XMXMap" value="xslt/RefundRequestStatusCalloutErrorHandler.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:refundRequestStatus"/>
          <outputTerminal type="ns3:findRefundStatus_findRefundStatusFaultMsg">
            <wire targetNode="RetrieveAccessGC_findRefundStatus_InputFault" targetTerminal="findRefundStatus_findRefundStatusFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="findRefundStatus : RetrieveAccessGC" name="RetrieveAccessGC_findRefundStatus_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="find_RefundStatus_ErrorMap"/>
          </outputTerminal>
        </node>
        <node displayName="findRefundStatus : RetrieveAccessGC" name="RetrieveAccessGC_findRefundStatus_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findRefundStatusResponseMsg"/>
        </node>
        <node displayName="findRefundStatus : RetrieveAccessGC" name="RetrieveAccessGC_findRefundStatus_InputFault" type="InputFault">
          <inputTerminal name="findRefundStatus_findRefundStatusFaultMsg" type="ns3:findRefundStatus_findRefundStatusFaultMsg"/>
        </node>
        <node name="find_RefundStatus_ErrorMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_RefundStatus_ErrorMap_err_1.xsl"/>
          <property name="XMXMap" value="xslt/find_RefundStatus_ErrorMap_err_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal/>
          <outputTerminal type="ns3:findRefundStatus_findRefundStatusFaultMsg">
            <wire targetNode="SaveErrorResponseStructure"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findRefundStatusErrorLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findRefundStatusErrorLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findRefundStatusErrorLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findRefundStatus_InputFault" targetTerminal="findRefundStatus_findRefundStatusFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="SaveErrorResponseStructure" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/response",output);
smo.setString("/context/correlation/status","FAILED");
smo.setInt("/context/correlation/isExecuting",2);
smo.setDate("/context/correlation/lastResponseOn",new Date());
if(smo.getString("/body/findRefundStatusFault1_findRefundStatusFault/error[0]/errorCode")!=null && !"".equalsIgnoreCase(smo.getString("/body/findRefundStatusFault1_findRefundStatusFault/error[0]/errorCode")))
smo.setString("/context/correlation/errorCode",smo.getString("/body/findRefundStatusFault1_findRefundStatusFault/error[0]/errorCode"));
else
smo.setString("/context/correlation/errorCode","");
if(smo.getString("/body/findRefundStatusFault1_findRefundStatusFault/error[0]/errorDetail")!=null && !"".equalsIgnoreCase(smo.getString("/body/findRefundStatusFault1_findRefundStatusFault/error[0]/errorDetail")))
smo.setString("/context/correlation/errorDetail",smo.getString("/body/findRefundStatusFault1_findRefundStatusFault/error[0]/errorDetail"));
else
smo.setString("/context/correlation/errorDetail","");
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1597060084609"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer;java.util.*"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="ns3:findRefundStatus_findRefundStatusFaultMsg">
            <wire targetNode="findRefundStatusErrorLogger"/>
            <wire targetNode="GCTransactionLogErrorMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="GCTransactionLogErrorMap" type="XSLTransformation">
          <property name="root" value="%xslt.root.default"/>
          <property name="XSLTransform" value="xslt/GCTransactionLogResponseMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/GCTransactionLogResponseMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="FindRefundStatusGCTransactionErrorLogService"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="FindRefundStatusGCTransactionErrorLogService" type="ServiceInvoke">
          <property name="referenceName" value="UpdateGCTransactionLogPartner"/>
          <property name="operationName" value="updateGCTransactionLog"/>
          <property name="invocationStyle" value="6"/>
          <property name="retryOn" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryOn9"/>
          <property name="retryCount" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryCount9"/>
          <property name="retryDelay" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryDelay9"/>
          <inputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg"/>
          <outputTerminal name="timeout" type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <outputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogResponseMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Stop" type="Stop">
          <inputTerminal type="XMLSchema:anyType"/>
        </node>
      </errorFlow>
    </operation>
    <operation name="calculateCancellationRefund">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <node displayName="calculateCancellationRefund : RetrieveAccessGC" name="RetrieveAccessGC_calculateCancellationRefund_Input" type="Input">
          <property name="correlationContext" value="{http://Access-ApplicationGC}correlationBO"/>
          <outputTerminal type="ns3:calculateCancellationRefundRequestMsg">
            <wire targetNode="formatDates"/>
          </outputTerminal>
        </node>
        <node name="saveRequestStructureCalculatePremiumMotor" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            		    	
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1535449978416"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASMotorService:webServicePremiumCalculationDtls">
            <wire targetNode="RASMotorServicePartner_webServicePremiumCalculationDtls_Callout"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="formatDates" type="CustomMediation">
          <property name="javaCode"><![CDATA[
 System.out.println("Callout error handler in Calculate premium");
 try{
smo.setInt("/context/correlation/transactionId",smo.getInt("/body/calculateCancellationRefund/transactionId"));
smo.setInt("/context/correlation/isExecuting",1);
smo.setString("/context/correlation/response","");
smo.setDate("/context/correlation/lastRequestedOn",new Date());
if("Motor".equalsIgnoreCase(smo.getString("/body/calculateCancellationRefund/input/lob"))){
     if(smo.getString("/body/calculateCancellationRefund/input/cancellationReason").equalsIgnoreCase("Request At Insurer Discretion - PL Rule Book"))
          smo.setString("/body/calculateCancellationRefund/input/cancellationDescription","PL Rule Book");
     if(smo.getString("/body/calculateCancellationRefund/input/cancellationReason").equalsIgnoreCase("Request At Insurer Discretion-Misdeclaration of Facts"))
          smo.setString("/body/calculateCancellationRefund/input/cancellationDescription","Misdeclaration of Facts");
  }
   if("Aig Combined".equalsIgnoreCase(smo.getString("/body/calculateCancellationRefund/input/lob"))){

     smo.setString("/body/calculateCancellationRefund/input/cancellationDescription",smo.getString("/body/calculateCancellationRefund/input/cancellationOption"));
     smo.setString("/body/calculateCancellationRefund/input/cancellationReason","Others");
     if("".equalsIgnoreCase(smo.getString("/body/calculateCancellationRefund/input/agreedPremiumAmount")) || smo.getString("/body/calculateCancellationRefund/input/agreedPremiumAmount")==null)
     smo.setString("/body/calculateCancellationRefund/input/agreedPremiumAmount","0");
  }
  
   if("Property and Energy".equalsIgnoreCase(smo.getString("/body/calculateCancellationRefund/input/lob"))){
     if("Others".equalsIgnoreCase(smo.getString("/body/calculateCancellationRefund/input/cancellationReason")))
     {
     smo.setString("/body/calculateCancellationRefund/input/cancellationDescription",smo.getString("/body/calculateCancellationRefund/input/cancellationOption"));
     }
  }
  
   if("Liability".equalsIgnoreCase(smo.getString("/body/calculateCancellationRefund/input/lob"))){
     if("Others".equalsIgnoreCase(smo.getString("/body/calculateCancellationRefund/input/cancellationReason")))
     {
     smo.setString("/body/calculateCancellationRefund/input/cancellationDescription",smo.getString("/body/calculateCancellationRefund/input/cancellationOption"));
     }
     else
     {
     smo.setString("/body/calculateCancellationRefund/input/cancellationDescription",smo.getString("/body/calculateCancellationRefund/input/remarks"));
     }
  }
   if("Trade Credit".equalsIgnoreCase(smo.getString("/body/calculateCancellationRefund/input/lob"))){
     if("".equalsIgnoreCase(smo.getString("/body/calculateCancellationRefund/input/retainMinPrem")) || smo.getString("/body/calculateCancellationRefund/input/retainMinPrem")==null)
     smo.setString("/body/calculateCancellationRefund/input/retainMinPrem","0");
  }

  Date oldDate = null; 
  String formattedDate = null;
  SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
  
   oldDate = smo.getDate("/body/calculateCancellationRefund/input/policyStartDate");
   if(oldDate!=null){
   formattedDate = dateFormat.format(oldDate);
   smo.setString("/context/correlation/policyStartDate",formattedDate);
   }
   
   
    oldDate = smo.getDate("/body/calculateCancellationRefund/input/endDateOfRequest");
    if(oldDate!=null){
    formattedDate = dateFormat.format(oldDate);
    smo.setString("/context/correlation/endDateOfRequest",formattedDate);
    }
   
    oldDate = smo.getDate("/body/calculateCancellationRefund/input/effectiveDate");
    if(oldDate!=null){
    formattedDate = dateFormat.format(oldDate);
    smo.setString("/context/correlation/effectiveDate",formattedDate);
    }
  /* 
   SimpleDateFormat getTime = new SimpleDateFormat("HH:mm");
   Date date = new Date();
   smo.setString("/body/calculateCancellationRefund/input/effectiveTime","23:59");*/
   
   /*
   String effectiveTime= smo.getString("/body/calculateCancellationRefund/input/effectiveTime");
 
   smo.setString("/body/calculateCancellationRefund/input/effectiveTime",effectiveTime);
   */
   
    oldDate = smo.getDate("/body/calculateCancellationRefund/input/periodFromDate");
    if(oldDate!=null){
    formattedDate = dateFormat.format(oldDate);
    smo.setString("/context/correlation/periodFromDate",formattedDate);
    }
    
    oldDate = smo.getDate("/body/calculateCancellationRefund/input/periodToDate");
    if(oldDate!=null){
    formattedDate = dateFormat.format(oldDate);
    smo.setString("/context/correlation/periodToDate",formattedDate);
    }   
   
   Date ncbDate = smo.getDate("/body/calculateCancellationRefund/input/ncbReservingEffectiveDate");
   if(ncbDate!=null){
    formattedDate = dateFormat.format(ncbDate);
    smo.setString("/context/correlation/ncbReservingDate",formattedDate);
   }
   String lob  = smo.getString("/body/calculateCancellationRefund/input/lob");
   if(lob.equalsIgnoreCase("Health")|| lob.equalsIgnoreCase("Personal Accident")|| "LTA".equalsIgnoreCase(lob)){
   smo.setString("/body/calculateCancellationRefund/input/remarks",smo.getString("/body/calculateCancellationRefund/input/cancellationReason"));
   smo.setString("/body/calculateCancellationRefund/input/cancellationReason","");
   }
    
  out.fire(smo);
  
  }
  catch(Exception e){
  e.printStackTrace();
  } // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1535450843275"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="java.text.SimpleDateFormat;java.util.*"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="ns3:calculateCancellationRefundRequestMsg">
            <wire targetNode="LOBFilter"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="LOBFilter" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/lob = 'Motor'"/>
              <property name="terminalName" value="match2"/>
            </row>
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/lob = 'Travel'"/>
              <property name="terminalName" value="match1"/>
            </row>
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/lob = 'LTA'"/>
              <property name="terminalName" value="match3"/>
            </row>
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/lob = 'Health'"/>
              <property name="terminalName" value="match4"/>
            </row>
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/lob = 'Home'"/>
              <property name="terminalName" value="match5"/>
            </row>
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/lob = 'Aig Combined'"/>
              <property name="terminalName" value="match6"/>
            </row>
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/lob = 'Marine Cargo'"/>
              <property name="terminalName" value="match7"/>
            </row>
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/lob = 'Personal Accident'"/>
              <property name="terminalName" value="match8"/>
            </row>
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/lob = 'Property and Energy'"/>
              <property name="terminalName" value="match9"/>
            </row>
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/lob = 'Liability'"/>
              <property name="terminalName" value="match10"/>
            </row>
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/lob = 'Financial Line'"/>
              <property name="terminalName" value="match11"/>
            </row>
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/lob = 'Trade Credit'"/>
              <property name="terminalName" value="match12"/>
            </row>
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/lob = 'Aviation'"/>
              <property name="terminalName" value="match13"/>
            </row>
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/lob = 'Rural'"/>
              <property name="terminalName" value="match14"/>
            </row>
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/lob = 'Personal Lines'"/>
              <property name="terminalName" value="match15"/>
            </row>
            <row>
              <property name="pattern" value="/body/calculateCancellationRefund/input/KhokhaFlag = 'Y'"/>
              <property name="terminalName" value="match16"/>
            </row>
          </table>
          <inputTerminal type="ns3:calculateCancellationRefundRequestMsg"/>
          <outputTerminal name="default"/>
          <outputTerminal displayName="Motor" name="match2">
            <wire targetNode="calculatePremium_Motor_InputMap"/>
          </outputTerminal>
          <outputTerminal displayName="Travel" name="match1">
            <wire targetNode="calculatePremium_Travel_LTA_InputMap"/>
          </outputTerminal>
          <outputTerminal displayName="LTA" name="match3">
            <wire targetNode="calculatePremium_Travel_LTA_InputMap"/>
          </outputTerminal>
          <outputTerminal displayName="Health" name="match4">
            <wire targetNode="calculatePremium_Health_InputMap"/>
          </outputTerminal>
          <outputTerminal displayName="Home" name="match5">
            <wire targetNode="calculatePremium_Home_InputMap"/>
          </outputTerminal>
          <outputTerminal displayName="AIG" name="match6">
            <wire targetNode="calculatePremium_AigCombined_InputMap"/>
          </outputTerminal>
          <outputTerminal displayName="Marine" name="match7">
            <wire targetNode="calculatePremium_MarineCargo_InputMap"/>
          </outputTerminal>
          <outputTerminal displayName="PA" name="match8">
            <wire targetNode="calculatePremium_PersonalAccident_InputMap"/>
          </outputTerminal>
          <outputTerminal displayName="PE" name="match9">
            <wire targetNode="calculatePremium_PropertyandEnergy_InputMap"/>
          </outputTerminal>
          <outputTerminal displayName="Liability" name="match10">
            <wire targetNode="calculatePremium_Liability_InputMap"/>
          </outputTerminal>
          <outputTerminal displayName="Financial Line" name="match11">
            <wire targetNode="calculatePremium_FinancialLines_InputMap"/>
          </outputTerminal>
          <outputTerminal displayName="Trade credit" name="match12">
            <wire targetNode="calculatePremium_TradeCredit_InputMap"/>
          </outputTerminal>
          <outputTerminal displayName="Aviation" name="match13">
            <wire targetNode="calculatePremium_Aviation_InputMap"/>
          </outputTerminal>
          <outputTerminal displayName="Rural" name="match14"/>
          <outputTerminal displayName="Personal Lines" name="match15">
            <wire targetNode="calculatePremium_PersonalLines_InputMap"/>
          </outputTerminal>
          <outputTerminal displayName="Khokha" name="match16">
            <wire targetNode="CalculatePremium_Khokha_Input"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="saveRequestStructureCalculatePremiumTravel&amp;LTA" name="saveRequestStructureCalculatePremiumTravel_LTA" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            		    	
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1537788047207"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASLTAService:webServicePremiumCalculationLTA">
            <wire targetNode="calculatePremiumTravel_LTARequestLogger"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="saveRequestStructureCalculatePremiumHealth" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            		    	
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1537788511744"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASHealthService:webServicePremiumCalculationHealth">
            <wire targetNode="calculatePremiumHealthRequestLogger"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="saveRequestStructureCalculatePremiumHome" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            		    	
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1538114081453"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASHomeService:webServicePremiumCalculation">
            <wire targetNode="calculatePremiumHomeRequestLogger"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="saveRequestStructureCalculatePremiumPersonalAccident" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            		    	
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1538115124487"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASPAService:webServicePremiumCalculationPA">
            <wire targetNode="calculatePremiumPersonalAccidentRequestLogger"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationDtls : RASMotorServicePartner" name="RASMotorServicePartner_webServicePremiumCalculationDtls_Callout" type="Callout">
          <property name="referenceName" value="RASMotorServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationDtls"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASMotorService:webServicePremiumCalculationDtls"/>
        </node>
        <node name="calculatePremium_Motor_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_Motor_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_Motor_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:calculateCancellationRefundRequestMsg"/>
          <outputTerminal type="RASMotorService:webServicePremiumCalculationDtls">
            <wire targetNode="calculatePremiumMotorRequestLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremiumMotorRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumMotorRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumMotorRequestLogger.file1" value="logs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="saveRequestStructureCalculatePremiumMotor"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="calculatePremium_Travel&amp;LTA_InputMap" name="calculatePremium_Travel_LTA_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_Travel_LTA_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_Travel_LTA_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:calculateCancellationRefundRequestMsg"/>
          <outputTerminal type="RASLTAService:webServicePremiumCalculationLTA">
            <wire targetNode="saveRequestStructureCalculatePremiumTravel_LTA"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="calculatePremiumTravel&amp;LTARequestLogger" name="calculatePremiumTravel_LTARequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumTravel_LTARequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumTravel_LTARequestLogger.file" value="D:\Sasidhar\RAS\logs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASLTAServicePartner_webServicePremiumCalculationLTA_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationLTA : RASLTAServicePartner" name="RASLTAServicePartner_webServicePremiumCalculationLTA_Callout" type="Callout">
          <property name="referenceName" value="RASLTAServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationLTA"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASLTAService:webServicePremiumCalculationLTA"/>
        </node>
        <node name="calculatePremium_Health_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_Health_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_Health_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:calculateCancellationRefundRequestMsg"/>
          <outputTerminal type="RASHealthService:webServicePremiumCalculationHealth">
            <wire targetNode="saveRequestStructureCalculatePremiumHealth"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremiumHealthRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumHealthRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumHealthRequestLogger.file1" value="logs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASHealthServicePartner_webServicePremiumCalculationHealth_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationHealth : RASHealthServicePartner" name="RASHealthServicePartner_webServicePremiumCalculationHealth_Callout" type="Callout">
          <property name="referenceName" value="RASHealthServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationHealth"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASHealthService:webServicePremiumCalculationHealth"/>
        </node>
        <node name="calculatePremium_Home_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_Home_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_Home_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:calculateCancellationRefundRequestMsg"/>
          <outputTerminal type="RASHomeService:webServicePremiumCalculation">
            <wire targetNode="saveRequestStructureCalculatePremiumHome"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremiumHomeRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumHomeRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumHomeRequestLogger.file" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASHomeServicePartner_webServicePremiumCalculation_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculation : RASHomeServicePartner" name="RASHomeServicePartner_webServicePremiumCalculation_Callout" type="Callout">
          <property name="referenceName" value="RASHomeServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculation"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASHomeService:webServicePremiumCalculation"/>
        </node>
        <node name="calculatePremium_PersonalAccident_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_PersonalAccident_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_PersonalAccident_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:calculateCancellationRefundRequestMsg"/>
          <outputTerminal type="RASPAService:webServicePremiumCalculationPA">
            <wire targetNode="saveRequestStructureCalculatePremiumPersonalAccident"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremiumPersonalAccidentRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumPersonalAccidentRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumPersonalAccidentRequestLogger.file1" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASPAServicePartner_webServicePremiumCalculationPA_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationPA : RASPAServicePartner" name="RASPAServicePartner_webServicePremiumCalculationPA_Callout" type="Callout">
          <property name="referenceName" value="RASPAServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationPA"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASPAService:webServicePremiumCalculationPA"/>
        </node>
        <node name="calculatePremium_FinancialLines_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_FinancialLines_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_FinancialLines_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:calculateCancellationRefundRequestMsg"/>
          <outputTerminal type="RASFinancialLinesService:webServicePremiumCalculationDtls">
            <wire targetNode="saveRequestStructureCalculatePremiumFinancialLines"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="saveRequestStructureCalculatePremiumFinancialLines" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            		    	
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1583836706671"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASFinancialLinesService:webServicePremiumCalculationDtls">
            <wire targetNode="calculatePremiumFinancialLinesRequestLogger"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremiumFinancialLinesRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumFinancialLinesRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumFinancialLinesRequestLogger.file1" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASFinancialLinesServicePartner_webServicePremiumCalculationDtls_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationDtls : RASFinancialLinesServicePartner" name="RASFinancialLinesServicePartner_webServicePremiumCalculationDtls_Callout" type="Callout">
          <property name="referenceName" value="RASFinancialLinesServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationDtls"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASFinancialLinesService:webServicePremiumCalculationDtls"/>
        </node>
        <node name="calculatePremium_TradeCredit_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_TradeCredit_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_TradeCredit_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:calculateCancellationRefundRequestMsg"/>
          <outputTerminal type="RASTradeCreditService:webServicePremiumCalculationDtls">
            <wire targetNode="saveRequestStructureCalculatePremiumTradeCredit"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="saveRequestStructureCalculatePremiumTradeCredit" type="CustomMediation">
          <property name="javaCode"><![CDATA[
 
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            		    	
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1583837556062"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASTradeCreditService:webServicePremiumCalculationDtls">
            <wire targetNode="calculatePremiumTradeCreditRequestLogger"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremiumTradeCreditRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumTradeCreditRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumTradeCreditRequestLogger.file" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASTradeCreditServicePartner_webServicePremiumCalculationDtls_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationDtls : RASTradeCreditServicePartner" name="RASTradeCreditServicePartner_webServicePremiumCalculationDtls_Callout" type="Callout">
          <property name="referenceName" value="RASTradeCreditServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationDtls"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASTradeCreditService:webServicePremiumCalculationDtls"/>
        </node>
        <node name="calculatePremium_PersonalLines_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_PersonalLines_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_PersonalLines_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:calculateCancellationRefundRequestMsg"/>
          <outputTerminal type="RASPersonalLinesService:webServicePremiumCalculationDtls">
            <wire targetNode="saveRequestStructureCalculatePremiumPersonalLines"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="saveRequestStructureCalculatePremiumPersonalLines" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            		    	
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1583839032964"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASPersonalLinesService:webServicePremiumCalculationDtls">
            <wire targetNode="calculatePremiumPersonallLinesRequestLogger"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremiumPersonallLinesRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumPersonallLinesRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumPersonallLinesRequestLogger.file" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASPersonalLinesServicePartner_webServicePremiumCalculationDtls_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationDtls : RASPersonalLinesServicePartner" name="RASPersonalLinesServicePartner_webServicePremiumCalculationDtls_Callout" type="Callout">
          <property name="referenceName" value="RASPersonalLinesServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationDtls"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASPersonalLinesService:webServicePremiumCalculationDtls"/>
        </node>
        <node name="calculatePremium_MarineCargo_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_MarineCargo_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_MarineCargo_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:calculateCancellationRefundRequestMsg"/>
          <outputTerminal type="RASMarineService:webServicePremiumCalculationMarine">
            <wire targetNode="saveRequestStructureCalculatePremiumMarineCargo"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="saveRequestStructureCalculatePremiumMarineCargo" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            		    	
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1584779248880"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASMarineService:webServicePremiumCalculationMarine">
            <wire targetNode="calculatePremiumMarineCargoRequestLogger"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremiumMarineCargoRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumMarineCargoRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumMarineCargoRequestLogger.file" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASMarineServicePartner_webServicePremiumCalculationMarine_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationMarine : RASMarineServicePartner" name="RASMarineServicePartner_webServicePremiumCalculationMarine_Callout" type="Callout">
          <property name="referenceName" value="RASMarineServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationMarine"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASMarineService:webServicePremiumCalculationMarine"/>
        </node>
        <node name="calculatePremium_AigCombined_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_AigCombined_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_AigCombined_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:calculateCancellationRefundRequestMsg"/>
          <outputTerminal type="RASAIGService:webServicePremiumCalculationAIG">
            <wire targetNode="saveRequestStructureCalculatePremiumAigCombined"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="saveRequestStructureCalculatePremiumAigCombined" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            		    	
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1584780062047"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASAIGService:webServicePremiumCalculationAIG">
            <wire targetNode="calculatePremiumAigCombinedRequestLogger"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremiumAigCombinedRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumAigCombinedRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumAigCombinedRequestLogger.file" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASAIGServicePartner_webServicePremiumCalculationAIG_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationAIG : RASAIGServicePartner" name="RASAIGServicePartner_webServicePremiumCalculationAIG_Callout" type="Callout">
          <property name="referenceName" value="RASAIGServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationAIG"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASAIGService:webServicePremiumCalculationAIG"/>
        </node>
        <node name="calculatePremium_Aviation_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_Aviation_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_Aviation_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:calculateCancellationRefundRequestMsg"/>
          <outputTerminal type="RASAviationService:webServicePremiumCalculationDtls">
            <wire targetNode="saveRequestStructureCalculatePremiumAviation"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="saveRequestStructureCalculatePremiumAviation" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            		    	
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1584780941589"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASAviationService:webServicePremiumCalculationDtls">
            <wire targetNode="calculatePremiumAviationRequestLogger"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremiumAviationRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumAviationRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumAviationRequestLogger.file1" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASAviationServicePartner_webServicePremiumCalculationDtls_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationDtls : RASAviationServicePartner" name="RASAviationServicePartner_webServicePremiumCalculationDtls_Callout" type="Callout">
          <property name="referenceName" value="RASAviationServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationDtls"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASAviationService:webServicePremiumCalculationDtls"/>
        </node>
        <node name="calculatePremium_Liability_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_Liability_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_Liability_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:calculateCancellationRefundRequestMsg"/>
          <outputTerminal type="RASCasualtyService:webServicePremiumCalculationCasualty">
            <wire targetNode="saveRequestStructureCalculatePremiumLiability"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="saveRequestStructureCalculatePremiumLiability" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            		    	
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1585042911029"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASCasualtyService:webServicePremiumCalculationCasualty">
            <wire targetNode="calculatePremiumLiabilityRequestLogger"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremiumLiabilityRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumLiabilityRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumLiabilityRequestLogger.file1" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASCasualtyServicePartner_webServicePremiumCalculationCasualty_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationCasualty : RASCasualtyServicePartner" name="RASCasualtyServicePartner_webServicePremiumCalculationCasualty_Callout" type="Callout">
          <property name="referenceName" value="RASCasualtyServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationCasualty"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASCasualtyService:webServicePremiumCalculationCasualty"/>
        </node>
        <node name="calculatePremium_PropertyandEnergy_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_PropertyandEnergy_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_PropertyandEnergy_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:calculateCancellationRefundRequestMsg"/>
          <outputTerminal type="RASPropertyEnergyService:webServicePremiumCalculationPE">
            <wire targetNode="saveRequestStructureCalculatePremiumPropertyandEnergy"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="saveRequestStructureCalculatePremiumPropertyandEnergy" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            		    	
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1585302117414"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASPropertyEnergyService:webServicePremiumCalculationPE">
            <wire targetNode="calculatePremiumPropertyandEnergyRequestLogger"/>
            <wire targetNode="calculatePremiumPropertyandEnergyRequestLogger"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremiumPropertyandEnergyRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumPropertyandEnergyRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumPropertyandEnergyRequestLogger.file" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASPropertyEnergyServicePartner_webServicePremiumCalculationPE_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationPE : RASPropertyEnergyServicePartner" name="RASPropertyEnergyServicePartner_webServicePremiumCalculationPE_Callout" type="Callout">
          <property name="referenceName" value="RASPropertyEnergyServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationPE"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASPropertyEnergyService:webServicePremiumCalculationPE"/>
        </node>
        <node name="GCTransactionLogRequestMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/GCTransactionLogRequestMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/GCTransactionLogRequestMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="CalculateRefundGCTransactionRequestLogService"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="CalculateRefundGCTransactionRequestLogService" type="ServiceInvoke">
          <property name="referenceName" value="UpdateGCTransactionLogPartner"/>
          <property name="operationName" value="updateGCTransactionLog"/>
          <property name="invocationStyle" value="6"/>
          <property name="retryOn" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryOn"/>
          <property name="retryCount" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryCount"/>
          <property name="retryDelay" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryDelay"/>
          <inputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg"/>
          <outputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogResponseMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <outputTerminal name="timeout" type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Stop" type="Stop">
          <inputTerminal type="XMLSchema:anyType"/>
        </node>
        <node displayName="webServiceRASGenericPremiumCalculation : RASRefundCancellationKhokaServicePartner" name="RASRefundCancellationKhokaServicePartner_webServiceRASGenericPremiumCalculation_Callout" type="Callout">
          <property name="referenceName" value="RASRefundCancellationKhokaServicePartner"/>
          <property name="operationName" value="webServiceRASGenericPremiumCalculation"/>
          <property name="invocationStyle" value="6"/>
          <property name="retryOn" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="Callout1.retryOn1"/>
          <property name="retryCount" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="Callout1.retryCount1"/>
          <property name="retryDelay" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="Callout1.retryDelay1"/>
          <inputTerminal type="ns34:webServiceRASGenericPremiumCalculation"/>
        </node>
        <node name="CalculatePremium_Khokha_Input" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/CalculatePremium_Khokha_Input.xsl"/>
          <property name="XMXMap" value="xslt/CalculatePremium_Khokha_Input.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:calculateCancellationRefundRequestMsg"/>
          <outputTerminal type="ns34:webServiceRASGenericPremiumCalculation">
            <wire targetNode="SaveRequestStructure_KhokhaService"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="SaveRequestStructure_KhokhaService" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            		    	
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1695789933051"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="ns34:webServiceRASGenericPremiumCalculation">
            <wire targetNode="CalculatePremium_KhokhaService"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="CalculatePremium_KhokhaService" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="CalculatePremium_KhokhaService.file" value="RASLog.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASRefundCancellationKhokaServicePartner_webServiceRASGenericPremiumCalculation_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </requestFlow>
      <responseFlow>
        <node displayName="calculateCancellationRefund : RetrieveAccessGC" name="RetrieveAccessGC_calculateCancellationRefund_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:calculateCancellationRefundResponseMsg"/>
        </node>
        <node displayName="calculateCancellationRefund : RetrieveAccessGC" name="RetrieveAccessGC_calculateCancellationRefund_InputFault" type="InputFault">
          <inputTerminal name="calculateCancellationRefund_calculateCancellationRefundFaultMsg" type="ns3:calculateCancellationRefund_calculateCancellationRefundFaultMsg"/>
        </node>
        <node name="STATUS" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/webServicePremiumCalculationDtlsResponse/WebService_PremiumCalculationDtlsResult/Status = 'SUCCESS'"/>
              <property name="terminalName" value="match1"/>
            </row>
          </table>
          <inputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse"/>
          <outputTerminal name="default">
            <wire targetNode="calculatePremium_FaultMap"/>
          </outputTerminal>
          <outputTerminal displayName="Success" name="match1">
            <wire targetNode="calculatePremium_OutputMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationDtls : RASMotorServicePartner" name="RASMotorServicePartner_webServicePremiumCalculationDtls_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASMotorServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationDtls"/>
          <outputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="STATUS"/>
          </outputTerminal>
          <failTerminal type="RASMotorService:webServicePremiumCalculationDtls"/>
        </node>
        <node name="calculatePremium_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse"/>
          <outputTerminal type="ns3:calculateCancellationRefundResponseMsg">
            <wire targetNode="saveSuccessResponseStructure"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremiumResponseLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumResponseLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumResponseLogger.file" value="log.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_calculateCancellationRefund_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremiumFaultLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumFaultLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumFaultLogger.file" value="log.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_calculateCancellationRefund_InputFault" targetTerminal="calculateCancellationRefund_calculateCancellationRefundFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremium_FaultMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_FaultMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_FaultMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse"/>
          <outputTerminal type="ns3:calculateCancellationRefund_calculateCancellationRefundFaultMsg">
            <wire targetNode="saveFailedResponseStructure"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationLTA : RASLTAServicePartner" name="RASLTAServicePartner_webServicePremiumCalculationLTA_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASLTAServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationLTA"/>
          <outputTerminal type="RASLTAService:webServicePremiumCalculationLTAResponse">
            <wire targetNode="calculatePremium_Travel_LTA_OutputMap"/>
          </outputTerminal>
          <failTerminal type="RASLTAService:webServicePremiumCalculationLTA"/>
        </node>
        <node displayName="webServicePremiumCalculationHealth : RASHealthServicePartner" name="RASHealthServicePartner_webServicePremiumCalculationHealth_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASHealthServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationHealth"/>
          <outputTerminal type="RASHealthService:webServicePremiumCalculationHealthResponse">
            <wire targetNode="calculatePremium_Health_OutputMap"/>
          </outputTerminal>
          <failTerminal type="RASHealthService:webServicePremiumCalculationHealth"/>
        </node>
        <node displayName="webServicePremiumCalculation : RASHomeServicePartner" name="RASHomeServicePartner_webServicePremiumCalculation_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASHomeServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculation"/>
          <outputTerminal type="RASHomeService:webServicePremiumCalculationResponse">
            <wire targetNode="calculatePremium_Home_OutputMap"/>
          </outputTerminal>
          <failTerminal type="RASHomeService:webServicePremiumCalculation"/>
        </node>
        <node displayName="webServicePremiumCalculationPA : RASPAServicePartner" name="RASPAServicePartner_webServicePremiumCalculationPA_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASPAServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationPA"/>
          <outputTerminal type="RASPAService:webServicePremiumCalculationPAResponse">
            <wire targetNode="calculatePremium_PersonalAccident_OutputMap"/>
          </outputTerminal>
          <failTerminal type="RASPAService:webServicePremiumCalculationPA"/>
        </node>
        <node displayName="calculatePremium_Travel&amp;LTA_OutputMap" name="calculatePremium_Travel_LTA_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_Travel_LTA_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_Travel_LTA_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASLTAService:webServicePremiumCalculationLTAResponse"/>
          <outputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="STATUS"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremium_Health_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_Health_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_Health_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASHealthService:webServicePremiumCalculationHealthResponse"/>
          <outputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="STATUS"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremium_Home_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_Home_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_Home_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASHomeService:webServicePremiumCalculationResponse"/>
          <outputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="STATUS"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremium_PersonalAccident_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_PersonalAccident_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_PersonalAccident_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASPAService:webServicePremiumCalculationPAResponse"/>
          <outputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="STATUS"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationDtls : RASFinancialLinesServicePartner" name="RASFinancialLinesServicePartner_webServicePremiumCalculationDtls_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASFinancialLinesServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationDtls"/>
          <outputTerminal type="RASFinancialLinesService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="calculatePremium_FinancialLines_OutputMap"/>
          </outputTerminal>
          <failTerminal type="RASFinancialLinesService:webServicePremiumCalculationDtls"/>
        </node>
        <node displayName="webServicePremiumCalculationDtls : RASTradeCreditServicePartner" name="RASTradeCreditServicePartner_webServicePremiumCalculationDtls_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASTradeCreditServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationDtls"/>
          <outputTerminal type="RASTradeCreditService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="calculatePremium_TradeCredit_OutputMap"/>
          </outputTerminal>
          <failTerminal type="RASTradeCreditService:webServicePremiumCalculationDtls"/>
        </node>
        <node displayName="webServicePremiumCalculationDtls : RASPersonalLinesServicePartner" name="RASPersonalLinesServicePartner_webServicePremiumCalculationDtls_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASPersonalLinesServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationDtls"/>
          <outputTerminal type="RASPersonalLinesService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="calculatePremium_PersonalLines_OutputMap"/>
          </outputTerminal>
          <failTerminal type="RASPersonalLinesService:webServicePremiumCalculationDtls"/>
        </node>
        <node name="calculatePremium_FinancialLines_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_FinancialLines_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_FinancialLines_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASFinancialLinesService:webServicePremiumCalculationDtlsResponse"/>
          <outputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="STATUS"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremium_TradeCredit_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_TradeCredit_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_TradeCredit_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASTradeCreditService:webServicePremiumCalculationDtlsResponse"/>
          <outputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="STATUS"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremium_PersonalLines_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_PersonalLines_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_PersonalLines_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASPersonalLinesService:webServicePremiumCalculationDtlsResponse"/>
          <outputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="STATUS"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationMarine : RASMarineServicePartner" name="RASMarineServicePartner_webServicePremiumCalculationMarine_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASMarineServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationMarine"/>
          <outputTerminal type="RASMarineService:webServicePremiumCalculationMarineResponse">
            <wire targetNode="calculatePremium_MarineCargo_OutputMap"/>
          </outputTerminal>
          <failTerminal type="RASMarineService:webServicePremiumCalculationMarine"/>
        </node>
        <node name="calculatePremium_MarineCargo_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_MarineCargo_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_MarineCargo_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASMarineService:webServicePremiumCalculationMarineResponse"/>
          <outputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="STATUS"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationAIG : RASAIGServicePartner" name="RASAIGServicePartner_webServicePremiumCalculationAIG_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASAIGServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationAIG"/>
          <outputTerminal type="RASAIGService:webServicePremiumCalculationAIGResponse">
            <wire targetNode="calculatePremium_AigCombined_OutputMap"/>
          </outputTerminal>
          <failTerminal type="RASAIGService:webServicePremiumCalculationAIG"/>
        </node>
        <node name="calculatePremium_AigCombined_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_AigCombined_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_AigCombined_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASAIGService:webServicePremiumCalculationAIGResponse"/>
          <outputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="STATUS"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationDtls : RASAviationServicePartner" name="RASAviationServicePartner_webServicePremiumCalculationDtls_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASAviationServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationDtls"/>
          <outputTerminal type="RASAviationService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="calculatePremium_Aviation_OutputMap"/>
          </outputTerminal>
          <failTerminal type="RASAviationService:webServicePremiumCalculationDtls"/>
        </node>
        <node name="calculatePremium_Aviation_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_Aviation_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_Aviation_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASAviationService:webServicePremiumCalculationDtlsResponse"/>
          <outputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="STATUS"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationCasualty : RASCasualtyServicePartner" name="RASCasualtyServicePartner_webServicePremiumCalculationCasualty_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASCasualtyServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationCasualty"/>
          <outputTerminal type="RASCasualtyService:webServicePremiumCalculationCasualtyResponse">
            <wire targetNode="calculatePremium_Liability_OutputMap"/>
          </outputTerminal>
          <failTerminal type="RASCasualtyService:webServicePremiumCalculationCasualty"/>
        </node>
        <node name="calculatePremium_Liability_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_Liability_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_Liability_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASCasualtyService:webServicePremiumCalculationCasualtyResponse"/>
          <outputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="STATUS"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServicePremiumCalculationPE : RASPropertyEnergyServicePartner" name="RASPropertyEnergyServicePartner_webServicePremiumCalculationPE_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASPropertyEnergyServicePartner"/>
          <property name="operationName" value="webServicePremiumCalculationPE"/>
          <outputTerminal type="RASPropertyEnergyService:webServicePremiumCalculationPEResponse">
            <wire targetNode="calculatePremium_PropertyandEnergy_OutputMap"/>
          </outputTerminal>
          <failTerminal type="RASPropertyEnergyService:webServicePremiumCalculationPE"/>
        </node>
        <node name="calculatePremium_PropertyandEnergy_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_PropertyandEnergy_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_PropertyandEnergy_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASPropertyEnergyService:webServicePremiumCalculationPEResponse"/>
          <outputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="STATUS"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="saveSuccessResponseStructure" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);		*/            
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/response",output);
smo.setInt("/context/correlation/isExecuting",0);
smo.setString("/context/correlation/status","SUCCESS");
smo.setString("/context/correlation/errorCode","");
smo.setString("/context/correlation/errorDetail","");
smo.setDate("/context/correlation/lastResponseOn",new Date());
out.fire(smo);  // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1595420160634"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer;java.util.*"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal explicitType="false" type="ns3:calculateCancellationRefundResponseMsg">
            <wire targetNode="calculatePremiumResponseLogger"/>
            <wire targetNode="GCTransactionLogResponseMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Stop" type="Stop">
          <inputTerminal type="XMLSchema:anyType"/>
        </node>
        <node name="saveFailedResponseStructure" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*
BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);	*/	            
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/response",output);
smo.setString("/context/correlation/status","FAILED");
smo.setInt("/context/correlation/isExecuting",2);
System.out.println("Is executing"+smo.getInt("/context/correlation/isExecuting"));
smo.setDate("/context/correlation/lastResponseOn",new Date());
if(smo.getString("/body/calculateCancellationRefundFault1_calculateCancellationRefundFault/error[0]/errorCode")!=null && !"".equalsIgnoreCase(smo.getString("/body/calculateCancellationRefundFault1_calculateCancellationRefundFault/error[0]/errorCode")))
smo.setString("/context/correlation/errorCode",smo.getString("/body/calculateCancellationRefundFault1_calculateCancellationRefundFault/error[0]/errorCode"));
else
smo.setString("/context/correlation/errorCode","");

if(smo.getString("/body/calculateCancellationRefundFault1_calculateCancellationRefundFault/error[0]/errorDetail")!=null && !"".equalsIgnoreCase(smo.getString("/body/calculateCancellationRefundFault1_calculateCancellationRefundFault/error[0]/errorDetail")))
smo.setString("/context/correlation/errorDetail",smo.getString("/body/calculateCancellationRefundFault1_calculateCancellationRefundFault/error[0]/errorDetail"));
else
smo.setString("/context/correlation/errorDetail","");
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1596082196359"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer;java.util.*"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="ns3:calculateCancellationRefund_calculateCancellationRefundFaultMsg">
            <wire targetNode="calculatePremiumFaultLogger"/>
            <wire targetNode="GCTransactionLogResponseMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="GCTransactionLogResponseMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/GCTransactionLogResponseMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/GCTransactionLogResponseMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="CalculateRefundGCTransactionResponseLogService"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="CalculateRefundGCTransactionResponseLogService" type="ServiceInvoke">
          <property name="referenceName" value="UpdateGCTransactionLogPartner"/>
          <property name="operationName" value="updateGCTransactionLog"/>
          <property name="invocationStyle" value="6"/>
          <property name="retryOn" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryOn1"/>
          <property name="retryCount" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryCount1"/>
          <property name="retryDelay" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryDelay1"/>
          <inputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg"/>
          <outputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogResponseMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <outputTerminal name="timeout" type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="webServiceRASGenericPremiumCalculation : RASRefundCancellationKhokaServicePartner" name="RASRefundCancellationKhokaServicePartner_webServiceRASGenericPremiumCalculation_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASRefundCancellationKhokaServicePartner"/>
          <property name="operationName" value="webServiceRASGenericPremiumCalculation"/>
          <outputTerminal type="ns34:webServiceRASGenericPremiumCalculationResponse">
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <failTerminal type="ns34:webServiceRASGenericPremiumCalculation"/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/KhokhaPremiumOutputMap.xsl"/>
          <property name="XMXMap" value="xslt/KhokhaPremiumOutputMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns34:webServiceRASGenericPremiumCalculationResponse"/>
          <outputTerminal type="RASMotorService:webServicePremiumCalculationDtlsResponse">
            <wire targetNode="STATUS"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="calculateCancellationRefund : RetrieveAccessGC" name="RetrieveAccessGC_calculateCancellationRefund_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="calculatePremium_ErrorMap"/>
          </outputTerminal>
        </node>
        <node displayName="calculateCancellationRefund : RetrieveAccessGC" name="RetrieveAccessGC_calculateCancellationRefund_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:calculateCancellationRefundResponseMsg"/>
        </node>
        <node displayName="calculateCancellationRefund : RetrieveAccessGC" name="RetrieveAccessGC_calculateCancellationRefund_InputFault" type="InputFault">
          <inputTerminal name="calculateCancellationRefund_calculateCancellationRefundFaultMsg" type="ns3:calculateCancellationRefund_calculateCancellationRefundFaultMsg"/>
        </node>
        <node name="calculatePremiumErrorLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumErrorLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="calculatePremiumErrorLogger.file" value="log.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_calculateCancellationRefund_InputFault" targetTerminal="calculateCancellationRefund_calculateCancellationRefundFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="calculatePremium_ErrorMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/calculatePremium_ErrorMap_err_1.xsl"/>
          <property name="XMXMap" value="xslt/calculatePremium_ErrorMap_err_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:calculateCancellationRefund_calculateCancellationRefundFaultMsg">
            <wire targetNode="saveErrorResponseStructure"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="saveErrorResponseStructure" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);	*/	            
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/response",output);
smo.setString("/context/correlation/status","FAILED");
smo.setInt("/context/correlation/isExecuting",2);
smo.setDate("/context/correlation/lastResponseOn",new Date());
if(smo.getString("/body/calculateCancellationRefundFault1_calculateCancellationRefundFault/error[0]/errorCode")!=null && !"".equalsIgnoreCase(smo.getString("/body/calculateCancellationRefundFault1_calculateCancellationRefundFault/error[0]/errorCode")))
smo.setString("/context/correlation/errorCode",smo.getString("/body/calculateCancellationRefundFault1_calculateCancellationRefundFault/error[0]/errorCode"));
else
smo.setString("/context/correlation/errorCode","");

if(smo.getString("/body/calculateCancellationRefundFault1_calculateCancellationRefundFault/error[0]/errorDetail")!=null && !"".equalsIgnoreCase(smo.getString("/body/calculateCancellationRefundFault1_calculateCancellationRefundFault/error[0]/errorDetail")))
smo.setString("/context/correlation/errorDetail",smo.getString("/body/calculateCancellationRefundFault1_calculateCancellationRefundFault/error[0]/errorDetail"));
else
smo.setString("/context/correlation/errorDetail","");
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1596083574091"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer;java.util.*"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="ns3:calculateCancellationRefund_calculateCancellationRefundFaultMsg">
            <wire targetNode="calculatePremiumErrorLogger"/>
            <wire targetNode="GCTransactionLogErrorMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="GCTransactionLogErrorMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/GCTransactionLogResponseMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/GCTransactionLogResponseMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal explicitType="false" type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="CalculateRefundGCTransactionErrorLogService"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="CalculateRefundGCTransactionErrorLogService" type="ServiceInvoke">
          <property name="referenceName" value="UpdateGCTransactionLogPartner"/>
          <property name="operationName" value="updateGCTransactionLog"/>
          <property name="invocationStyle" value="6"/>
          <property name="retryOn" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryOn2"/>
          <property name="retryCount" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryCount2"/>
          <property name="retryDelay" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryDelay2"/>
          <inputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg"/>
          <outputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogResponseMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <outputTerminal name="timeout" type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Stop" type="Stop">
          <inputTerminal type="XMLSchema:anyType"/>
        </node>
      </errorFlow>
    </operation>
    <operation name="findPolicyStatus">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false" mfcex:autoLayout="false">
        <node displayName="findPolicyStatus : RetrieveAccessGC" name="RetrieveAccessGC_findPolicyStatus_Input" type="Input" mfcex:x="10" mfcex:y="52">
          <property name="correlationContext" value="{http://Access-ApplicationGC}correlationBO"/>
          <outputTerminal type="ns3:findPolicyStatusRequestMsg">
            <wire targetNode="AssignTransactionId"/>
          </outputTerminal>
        </node>
        <node name="find_PolicyStatus_InputMap" type="XSLTransformation" mfcex:x="328" mfcex:y="52">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_PolicyStatus_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/find_PolicyStatus_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:findPolicyStatusRequestMsg"/>
          <outputTerminal type="ns4:getProposalStatus">
            <wire targetNode="findPolicyStatusRequestLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findPolicyStatusRequestLogger" type="Trace" mfcex:x="468" mfcex:y="52">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyStatusRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyStatusRequestLogger.file" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="SaveRequestStructure"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="Save Request Structure" name="SaveRequestStructure" type="CustomMediation" mfcex:x="608" mfcex:y="52">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/request",output);
smo.setString("/context/correlation/response","");
smo.setDate("/context/correlation/lastRequestedOn",new Date());
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1579584770114"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer;java.util.*"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="ns4:getProposalStatus">
            <wire targetNode="DBServicePartner_getProposalStatus_Callout"/>
            <wire targetNode="GCTransactionLogRequestMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="getProposalStatus : DBServicePartner" name="DBServicePartner_getProposalStatus_Callout" type="Callout" mfcex:x="1119" mfcex:y="20">
          <property name="referenceName" value="DBServicePartner"/>
          <property name="operationName" value="getProposalStatus"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="ns4:getProposalStatus"/>
        </node>
        <node displayName="Assign TransactionId" name="AssignTransactionId" type="CustomMediation" mfcex:x="198" mfcex:y="52">
          <property name="javaCode"><![CDATA[
 
try{
smo.setInt("/context/correlation/transactionId",smo.getInt("/body/findPolicyStatus/transactionId"));
smo.setInt("/context/correlation/isExecuting",1);
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
}
catch(Exception e){
e.printStackTrace();
} 
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1596524040061"/>
          <property name="version" value="6.1.0"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="ns3:findPolicyStatusRequestMsg">
            <wire targetNode="find_PolicyStatus_InputMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="GCTransactionLogRequestMap" type="XSLTransformation" mfcex:x="753" mfcex:y="52">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/GCTransactionLogRequestMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/GCTransactionLogRequestMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal explicitType="false" type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="FindPolicyStatusGCTransactionRequestLogService"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="FindPolicyStatusGCTransactionRequestLogService" type="ServiceInvoke" mfcex:x="893" mfcex:y="52">
          <property name="referenceName" value="UpdateGCTransactionLogPartner"/>
          <property name="operationName" value="updateGCTransactionLog"/>
          <property name="invocationStyle" value="6"/>
          <property name="retryOn" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryOn3"/>
          <property name="retryCount" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryCount3"/>
          <property name="retryDelay" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryDelay3"/>
          <inputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg"/>
          <outputTerminal name="timeout" type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <outputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogResponseMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Stop" type="Stop" mfcex:x="1038" mfcex:y="52">
          <inputTerminal type="XMLSchema:anyType"/>
        </node>
      </requestFlow>
      <responseFlow mfcex:autoLayout="false">
        <node displayName="findPolicyStatus : RetrieveAccessGC" name="RetrieveAccessGC_findPolicyStatus_InputResponse" type="InputResponse" mfcex:x="1042" mfcex:y="195">
          <inputTerminal type="ns3:findPolicyStatusResponseMsg"/>
        </node>
        <node displayName="findPolicyStatus : RetrieveAccessGC" name="RetrieveAccessGC_findPolicyStatus_InputFault" type="InputFault" mfcex:x="1050" mfcex:y="20">
          <inputTerminal name="findPolicyStatus_findPolicyStatusFaultMsg" type="ns3:findPolicyStatus_findPolicyStatusFaultMsg"/>
        </node>
        <node displayName="getProposalStatus : DBServicePartner" name="DBServicePartner_getProposalStatus_CalloutResponse" type="CalloutResponse" mfcex:x="10" mfcex:y="183">
          <property name="referenceName" value="DBServicePartner"/>
          <property name="operationName" value="getProposalStatus"/>
          <outputTerminal type="ns4:getProposalStatusResponse">
            <wire targetNode="StatusFilter"/>
          </outputTerminal>
          <failTerminal type="ns4:getProposalStatus"/>
        </node>
        <node name="find_PolicyStatus_OutputMap" type="XSLTransformation" mfcex:x="307" mfcex:y="196">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_PolicyStatus_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/find_PolicyStatus_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns4:getProposalStatusResponse"/>
          <outputTerminal type="ns3:findPolicyStatusResponseMsg">
            <wire targetNode="SaveSuccessResponseStructure"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findPolicyStatusResponseLogger" type="Trace" mfcex:x="602" mfcex:y="196">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyStatusResponseLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyStatusResponseLogger.file1" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findPolicyStatus_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="SaveSuccessResponseStructure" type="CustomMediation" mfcex:x="447" mfcex:y="196">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/response",output);
smo.setInt("/context/correlation/isExecuting",0);
smo.setString("/context/correlation/status","SUCCESS");
smo.setString("/context/correlation/errorCode","");
smo.setString("/context/correlation/errorDetail","");
smo.setDate("/context/correlation/lastResponseOn",new Date());
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1596524488076"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer;java.util.*"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="ns3:findPolicyStatusResponseMsg">
            <wire targetNode="findPolicyStatusResponseLogger"/>
            <wire targetNode="GCTransactionLogResponseMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="GCTransactionLogResponseMap" type="XSLTransformation" mfcex:x="602" mfcex:y="92">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/GCTransactionLogResponseMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/GCTransactionLogResponseMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal explicitType="false" type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="FindPolicyStatusGCTransactionResponseLogService"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="FindPolicyStatusGCTransactionResponseLogService" type="ServiceInvoke" mfcex:x="742" mfcex:y="92">
          <property name="referenceName" value="UpdateGCTransactionLogPartner"/>
          <property name="operationName" value="updateGCTransactionLog"/>
          <property name="invocationStyle" value="6"/>
          <property name="retryOn" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryOn4"/>
          <property name="retryCount" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryCount4"/>
          <property name="retryDelay" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryDelay4"/>
          <inputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg"/>
          <outputTerminal name="timeout" type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <outputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogResponseMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Stop" type="Stop" mfcex:x="918" mfcex:y="95">
          <inputTerminal type="XMLSchema:anyType"/>
        </node>
        <node displayName="Status Filter" name="StatusFilter" type="MessageFilter" mfcex:x="220" mfcex:y="184">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/getProposalStatusResponse/GetProposalStatusResult/Status = 'ERFC'"/>
              <property name="terminalName" value="match1"/>
            </row>
            <row>
              <property name="pattern" value="/body/getProposalStatusResponse/GetProposalStatusResult/Status = 'ERF'"/>
              <property name="terminalName" value="match2"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="find_PolicyStatus_FaultMap1"/>
          </outputTerminal>
          <outputTerminal displayName="ERFCStatus" name="match1">
            <wire targetNode="find_PolicyStatus_OutputMap"/>
          </outputTerminal>
          <outputTerminal displayName="ERFStatus" name="match2">
            <wire targetNode="find_PolicyStatus_OutputMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="find_PolicyStatus_FaultMap" name="find_PolicyStatus_FaultMap1" type="XSLTransformation" mfcex:x="307" mfcex:y="92">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_PolicyStatus_FaultMap1_res_1.xsl"/>
          <property name="XMXMap" value="xslt/find_PolicyStatus_FaultMap1_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns4:getProposalStatusResponse"/>
          <outputTerminal type="ns3:findPolicyStatus_findPolicyStatusFaultMsg">
            <wire targetNode="SaveFailedResponseStructure"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="SaveFailedResponseStructure" type="CustomMediation" mfcex:x="434" mfcex:y="72">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/response",output);
smo.setString("/context/correlation/status","FAILED");
smo.setInt("/context/correlation/isExecuting",2);
smo.setDate("/context/correlation/lastResponseOn",new Date());
if(smo.getString("/body/findPolicyStatusFault1_findPolicyStatusFault/error[0]/errorCode")!=null && !"".equalsIgnoreCase(smo.getString("/body/findPolicyStatusFault1_findPolicyStatusFault/error[0]/errorCode")))
smo.setString("/context/correlation/errorCode",smo.getString("/body/findPolicyStatusFault1_findPolicyStatusFault/error[0]/errorCode"));
else
smo.setString("/context/correlation/errorCode","");
if(smo.getString("/body/findPolicyStatusFault1_findPolicyStatusFault/error[0]/errorDetail")!=null && !"".equalsIgnoreCase(smo.getString("/body/findPolicyStatusFault1_findPolicyStatusFault/error[0]/errorDetail")))
smo.setString("/context/correlation/errorDetail",smo.getString("/body/findPolicyStatusFault1_findPolicyStatusFault/error[0]/errorDetail"));
else
smo.setString("/context/correlation/errorDetail","");
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1599049929949"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer;java.util.*"/>
          <inputTerminal/>
          <outputTerminal type="ns3:findPolicyStatus_findPolicyStatusFaultMsg">
            <wire targetNode="GCTransactionLogResponseMap"/>
            <wire targetNode="findPolicyStatusFaultLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findPolicyStatusFaultLogger" type="Trace" mfcex:x="897" mfcex:y="20">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyStatusFaultLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyStatusFaultLogger.file" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal type="ns3:findPolicyStatus_findPolicyStatusFaultMsg"/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findPolicyStatus_InputFault" targetTerminal="findPolicyStatus_findPolicyStatusFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="findPolicyStatus : RetrieveAccessGC" name="RetrieveAccessGC_findPolicyStatus_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="find_PolicyStatus_ErrorMap"/>
          </outputTerminal>
        </node>
        <node displayName="findPolicyStatus : RetrieveAccessGC" name="RetrieveAccessGC_findPolicyStatus_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findPolicyStatusResponseMsg"/>
        </node>
        <node displayName="findPolicyStatus : RetrieveAccessGC" name="RetrieveAccessGC_findPolicyStatus_InputFault" type="InputFault">
          <inputTerminal name="findPolicyStatus_findPolicyStatusFaultMsg" type="ns3:findPolicyStatus_findPolicyStatusFaultMsg"/>
        </node>
        <node name="find_PolicyStatus_ErrorMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_PolicyStatus_ErrorMap_err_1.xsl"/>
          <property name="XMXMap" value="xslt/find_PolicyStatus_ErrorMap_err_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:findPolicyStatus_findPolicyStatusFaultMsg">
            <wire targetNode="SaveErrorResponseStructure"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findPolicyStatusErrorLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyStatusErrorLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findPolicyStatusErrorLogger.file" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findPolicyStatus_InputFault" targetTerminal="findPolicyStatus_findPolicyStatusFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="Save Error Response Structure" name="SaveErrorResponseStructure" type="CustomMediation">
          <property name="javaCode"><![CDATA[
/*BOFactory boFactory = (BOFactory) ServiceManager.INSTANCE
.locateService("com/ibm/websphere/bo/BOFactory");
DataObject correlation = boFactory.create("http://Access-ApplicationGC","correlationBO");          
smo.setDataObject("/context/correlation",correlation);*/            
String output =CustomSerializer.transformation(smo.getDataObject("/body"));
System.out.println("serialized----->"+output);
smo.setString("/context/correlation/response",output);
smo.setString("/context/correlation/status","FAILED");
smo.setInt("/context/correlation/isExecuting",2);
smo.setDate("/context/correlation/lastResponseOn",new Date());
if(smo.getString("/body/findPolicyStatusFault1_findPolicyStatusFault/error[0]/errorCode")!=null && !"".equalsIgnoreCase(smo.getString("/body/findPolicyStatusFault1_findPolicyStatusFault/error[0]/errorCode")))
smo.setString("/context/correlation/errorCode",smo.getString("/body/findPolicyStatusFault1_findPolicyStatusFault/error[0]/errorCode"));
else
smo.setString("/context/correlation/errorCode","");

if(smo.getString("/body/findPolicyStatusFault1_findPolicyStatusFault/error[0]/errorDetail")!=null && !"".equalsIgnoreCase(smo.getString("/body/findPolicyStatusFault1_findPolicyStatusFault/error[0]/errorDetail")))
smo.setString("/context/correlation/errorDetail",smo.getString("/body/findPolicyStatusFault1_findPolicyStatusFault/error[0]/errorDetail"));
else
smo.setString("/context/correlation/errorDetail","");
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1596524927356"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="org.aig.impl.CustomSerializer;java.util.*"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="ns3:findPolicyStatus_findPolicyStatusFaultMsg">
            <wire targetNode="findPolicyStatusErrorLogger"/>
            <wire targetNode="GCTransactionLogErrorMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="GCTransactionLogErrorMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/GCTransactionLogResponseMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/GCTransactionLogResponseMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal explicitType="false" type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="FindPolicyStatusGCTransactionErrorLogService"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="FindPolicyStatusGCTransactionErrorLogService" type="ServiceInvoke">
          <property name="referenceName" value="UpdateGCTransactionLogPartner"/>
          <property name="operationName" value="updateGCTransactionLog"/>
          <property name="invocationStyle" value="6"/>
          <property name="retryOn" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryOn5"/>
          <property name="retryCount" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryCount5"/>
          <property name="retryDelay" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ServiceInvoke1.retryDelay5"/>
          <inputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg"/>
          <outputTerminal name="timeout" type="UpdateGCTransactionLog:updateGCTransactionLogRequestMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <outputTerminal type="UpdateGCTransactionLog:updateGCTransactionLogResponseMsg">
            <wire targetNode="Stop"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Stop" type="Stop">
          <inputTerminal type="XMLSchema:anyType"/>
        </node>
      </errorFlow>
    </operation>
    <operation name="findProposals">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <node displayName="findProposals : RetrieveAccessGC" name="RetrieveAccessGC_findProposals_Input" type="Input">
          <property name="correlationContext" value="{http://Access-ApplicationGC}correlationBO"/>
          <outputTerminal type="ns3:findProposalsRequestMsg">
            <wire targetNode="find_Proposals_InputMap"/>
          </outputTerminal>
        </node>
        <node displayName="proposalDetails : RASGenericServicePartner" name="RASGenericServicePartner_proposalDetails_Callout" type="Callout">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="proposalDetails"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASGenericService:proposalDetails"/>
        </node>
        <node name="findProposalsRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findProposalsRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findProposalsRequestLogger.file" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASGenericServicePartner_proposalDetails_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="find_Proposals_InputMap" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/find_Proposals_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/find_Proposals_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:findProposalsRequestMsg"/>
          <outputTerminal type="RASGenericService:proposalDetails">
            <wire targetNode="findProposalsRequestLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </requestFlow>
      <responseFlow>
        <node displayName="proposalDetails : RASGenericServicePartner" name="RASGenericServicePartner_proposalDetails_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="proposalDetails"/>
          <outputTerminal type="RASGenericService:proposalDetailsResponse">
            <wire targetNode="Status_Filter"/>
          </outputTerminal>
          <failTerminal type="RASGenericService:proposalDetails"/>
        </node>
        <node displayName="findProposals : RetrieveAccessGC" name="RetrieveAccessGC_findProposals_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findProposalsResponseMsg"/>
        </node>
        <node displayName="findProposals : RetrieveAccessGC" name="RetrieveAccessGC_findProposals_InputFault" type="InputFault">
          <inputTerminal name="findProposals_findProposalsFaultMsg" type="ns3:findProposals_findProposalsFaultMsg"/>
        </node>
        <node displayName="Status Filter" name="Status_Filter" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/proposalDetailsResponse/ProposalDetailsResponse/ProposalDetailsResult/ProposalDetails/Status = 'SUCCESS'"/>
              <property name="terminalName" value="match1"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="find_Proposals_FaultMap"/>
          </outputTerminal>
          <outputTerminal displayName="Success" name="match1">
            <wire targetNode="FormatDates"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="FormatDates" type="CustomMediation">
          <property name="javaCode"><![CDATA[
try{
        int size = smo.getList("/body/proposalDetailsResponse/ProposalDetailsResponse/ProposalDetailsResult/ProposalDetails/objProposalDetails/Proposal").size();
       
        for(int i=1;i<=size;i++)
        {
        System.out.println("Size "+size+" Iteration "+i);
        String date = smo.getString("/body/proposalDetailsResponse/ProposalDetailsResponse/ProposalDetailsResult/ProposalDetails/objProposalDetails/Proposal["+i+"]/ProposalDate");
        String proposalNo = smo.getString("/body/proposalDetailsResponse/ProposalDetailsResponse/ProposalDetailsResult/ProposalDetails/objProposalDetails/Proposal["+i+"]/ProposalNo");
        System.out.println("date"+i+" :"+date+"  proposalNo"+i+" :"+proposalNo);
		DateFormat originalFormat = new SimpleDateFormat("dd/MM/yyyy");
		DateFormat targetFormat = new SimpleDateFormat("yyyy-MM-dd");
		Date date1 = originalFormat.parse(date);
		String formattedDate = targetFormat.format(date1); 
		System.out.println(" i Value "+i);
		System.out.println("formatted date "+formattedDate);
		smo.setString("/body/proposalDetailsResponse/ProposalDetailsResponse/ProposalDetailsResult/ProposalDetails/objProposalDetails/Proposal["+i+"]/ProposalDate",formattedDate);
		}
        out.fire(smo);
        }
        catch(Exception e){
        e.printStackTrace();
        } // propagate the service message object to the primitive that is wired to the 'out' terminal]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1579246881830"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="java.text.DateFormat;java.text.SimpleDateFormat;java.util.Date"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASGenericService:proposalDetailsResponse">
            <wire targetNode="find_Proposals_OutputMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="find_Proposals_OutputMap" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/find_Proposals_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/find_Proposals_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:proposalDetailsResponse"/>
          <outputTerminal type="ns3:findProposalsResponseMsg">
            <wire targetNode="findProposalsResponseLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findProposalsResponseLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findProposalsResponseLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findProposalsResponseLogger.file" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findProposals_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findProposalsFaultLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findProposalsFaultLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findProposalsFaultLogger.file" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findProposals_InputFault" targetTerminal="findProposals_findProposalsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="find_Proposals_FaultMap" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/find_Proposals_FaultMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/find_Proposals_FaultMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:proposalDetailsResponse"/>
          <outputTerminal type="ns3:findProposals_findProposalsFaultMsg">
            <wire targetNode="findProposalsFaultLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="findProposals : RetrieveAccessGC" name="RetrieveAccessGC_findProposals_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="find_Proposals_ErrorMap"/>
          </outputTerminal>
        </node>
        <node displayName="findProposals : RetrieveAccessGC" name="RetrieveAccessGC_findProposals_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findProposalsResponseMsg"/>
        </node>
        <node displayName="findProposals : RetrieveAccessGC" name="RetrieveAccessGC_findProposals_InputFault" type="InputFault">
          <inputTerminal name="findProposals_findProposalsFaultMsg" type="ns3:findProposals_findProposalsFaultMsg"/>
        </node>
        <node name="find_Proposals_ErrorMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_Proposals_ErrorMap_err_1.xsl"/>
          <property name="XMXMap" value="xslt/find_Proposals_ErrorMap_err_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:findProposals_findProposalsFaultMsg">
            <wire targetNode="findProposalsErrorLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findProposalsErrorLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findProposalsErrorLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findProposalsErrorLogger.file" value="C:\Users\kmandad\Desktop\RACAS\Logger\GCLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findProposals_InputFault" targetTerminal="findProposals_findProposalsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </errorFlow>
    </operation>
    <operation name="findMainReceiptDetails">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <node displayName="findMainReceiptDetails : RetrieveAccessGC" name="RetrieveAccessGC_findMainReceiptDetails_Input" type="Input">
          <property name="correlationContext" value="{http://Access-ApplicationGC}correlationBO"/>
          <outputTerminal type="ns3:findMainReceiptDetailsRequestMsg">
            <wire targetNode="find_MainReceipt_Details_InputMap"/>
          </outputTerminal>
        </node>
        <node name="find_MainReceipt_Details_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_MainReceipt_Details_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/find_MainReceipt_Details_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:findMainReceiptDetailsRequestMsg"/>
          <outputTerminal type="RASGenericService:fetchReceiptDetails">
            <wire targetNode="findMainReceiptDetailsRequestLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findMainReceiptDetailsRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findMainReceiptDetailsRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findMainReceiptDetailsRequestLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASGenericServicePartner_fetchReceiptDetails_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="fetchReceiptDetails : RASGenericServicePartner" name="RASGenericServicePartner_fetchReceiptDetails_Callout" type="Callout">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="fetchReceiptDetails"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASGenericService:fetchReceiptDetails"/>
        </node>
      </requestFlow>
      <responseFlow>
        <node displayName="fetchReceiptDetails : RASGenericServicePartner" name="RASGenericServicePartner_fetchReceiptDetails_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="fetchReceiptDetails"/>
          <outputTerminal type="RASGenericService:fetchReceiptDetailsResponse">
            <wire targetNode="Status_Filter"/>
          </outputTerminal>
          <failTerminal type="RASGenericService:fetchReceiptDetails"/>
        </node>
        <node displayName="findMainReceiptDetails : RetrieveAccessGC" name="RetrieveAccessGC_findMainReceiptDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findMainReceiptDetailsResponseMsg"/>
        </node>
        <node displayName="findMainReceiptDetails : RetrieveAccessGC" name="RetrieveAccessGC_findMainReceiptDetails_InputFault" type="InputFault">
          <inputTerminal name="findMainReceiptDetails_findMainReceiptDetailsFaultMsg" type="ns3:findMainReceiptDetails_findMainReceiptDetailsFaultMsg"/>
        </node>
        <node displayName="Status Filter" name="Status_Filter" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/fetchReceiptDetailsResponse/FetchReceiptDetailsResult/errorMsg='NA'"/>
              <property name="terminalName" value="match1"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="find_MainReceipt_Details_FaultMap"/>
          </outputTerminal>
          <outputTerminal displayName="Success" name="match1">
            <wire targetNode="Total_Amount_Calculation"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="find_MainReceipt_Details_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_MainReceipt_Details_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/find_MainReceipt_Details_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:fetchReceiptDetailsResponse"/>
          <outputTerminal type="ns3:findMainReceiptDetailsResponseMsg">
            <wire targetNode="findMainReceiptDetailsResponseLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="Total Amount Calculation" name="Total_Amount_Calculation" type="CustomMediation">
          <property name="javaCode"><![CDATA[
try{
Date originalDate = null;
String formattedDate = null;
DateFormat receiptDateOriginalFormat = new SimpleDateFormat("dd/MM/yyyy");
DateFormat instrumentDateDateOriginalFormat = new SimpleDateFormat("dd-MMM-yy");
DateFormat targetFormat = new SimpleDateFormat("yyyy-MM-dd");
String receiptDate = smo.getString("/body/fetchReceiptDetailsResponse/FetchReceiptDetailsResult/receiptDate");
String instrumentDate = smo.getString("/body/fetchReceiptDetailsResponse/FetchReceiptDetailsResult/instrumentDate");
if(receiptDate!=null&&receiptDate!="")
{
originalDate = receiptDateOriginalFormat.parse(receiptDate);
formattedDate = targetFormat.format(originalDate); 
smo.setString("/body/fetchReceiptDetailsResponse/FetchReceiptDetailsResult/receiptDate",formattedDate);
}
else
{
smo.setString("/body/fetchReceiptDetailsResponse/FetchReceiptDetailsResult/receiptDate",null);
}

if(instrumentDate!=null&&instrumentDate!="")
{
originalDate = instrumentDateDateOriginalFormat.parse(instrumentDate);
formattedDate = targetFormat.format(originalDate); 
smo.setString("/body/fetchReceiptDetailsResponse/FetchReceiptDetailsResult/instrumentDate",formattedDate);
}
else
{
smo.setString("/body/fetchReceiptDetailsResponse/FetchReceiptDetailsResult/instrumentDate",null);
}
String crsAmount = smo.getString("/body/fetchReceiptDetailsResponse/FetchReceiptDetailsResult/RecieptDtls[1]/instrument_amt");
String balance = smo.getString("/body/fetchReceiptDetailsResponse/FetchReceiptDetailsResult/RecieptDtls[1]/balance_amt");
if(crsAmount!=null && crsAmount!="" && balance!=null && balance!="")
{
double totalAmount = Double.valueOf(crsAmount)-Double.valueOf(balance);
smo.setDouble("/context/correlation/totalAmount",totalAmount);
}
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
}
catch(Exception e){
    e.printStackTrace();
}
    ]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1579256107406"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="java.text.DateFormat;java.text.SimpleDateFormat;java.util.*"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASGenericService:fetchReceiptDetailsResponse">
            <wire targetNode="find_MainReceipt_Details_OutputMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findMainReceiptDetailsResponseLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findMainReceiptDetailsResponseLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findMainReceiptDetailsResponseLogger.file" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findMainReceiptDetails_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="find_MainReceipt_Details_FaultMap" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/find_MainReceipt_Details_FaultMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/find_MainReceipt_Details_FaultMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:fetchReceiptDetailsResponse"/>
          <outputTerminal type="ns3:findMainReceiptDetails_findMainReceiptDetailsFaultMsg">
            <wire targetNode="findMainReceiptDetailsFaultLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findMainReceiptDetailsFaultLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findMainReceiptDetailsFaultLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findMainReceiptDetailsFaultLogger.file" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findMainReceiptDetails_InputFault" targetTerminal="findMainReceiptDetails_findMainReceiptDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow mfcex:autoLayout="false">
        <node displayName="findMainReceiptDetails : RetrieveAccessGC" name="RetrieveAccessGC_findMainReceiptDetails_ErrorInput" type="ErrorInput" mfcex:x="10" mfcex:y="107">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="find_MainReceipt_Details_ErrorMap"/>
          </outputTerminal>
        </node>
        <node displayName="findMainReceiptDetails : RetrieveAccessGC" name="RetrieveAccessGC_findMainReceiptDetails_InputResponse" type="InputResponse" mfcex:x="643" mfcex:y="20">
          <inputTerminal type="ns3:findMainReceiptDetailsResponseMsg"/>
        </node>
        <node displayName="findMainReceiptDetails : RetrieveAccessGC" name="RetrieveAccessGC_findMainReceiptDetails_InputFault" type="InputFault" mfcex:x="506" mfcex:y="107">
          <inputTerminal name="findMainReceiptDetails_findMainReceiptDetailsFaultMsg" type="ns3:findMainReceiptDetails_findMainReceiptDetailsFaultMsg"/>
        </node>
        <node name="find_MainReceipt_Details_ErrorMap" type="XSLTransformation" mfcex:x="226" mfcex:y="107">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_MainReceipt_Details_ErrorMap_err_1.xsl"/>
          <property name="XMXMap" value="xslt/find_MainReceipt_Details_ErrorMap_err_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:findMainReceiptDetails_findMainReceiptDetailsFaultMsg">
            <wire targetNode="findMainReceiptDetailsErrorLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findMainReceiptDetailsErrorLogger" type="Trace" mfcex:x="366" mfcex:y="107">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findMainReceiptDetailsErrorLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findMainReceiptDetailsErrorLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findMainReceiptDetails_InputFault" targetTerminal="findMainReceiptDetails_findMainReceiptDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </errorFlow>
    </operation>
    <operation name="findSubReceiptDetails">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <node displayName="findSubReceiptDetails : RetrieveAccessGC" name="RetrieveAccessGC_findSubReceiptDetails_Input" type="Input">
          <property name="correlationContext" value="{http://Access-ApplicationGC}correlationBO"/>
          <outputTerminal type="ns3:findSubReceiptDetailsRequestMsg">
            <wire targetNode="find_SubReceipt_Details_InputMap"/>
          </outputTerminal>
        </node>
        <node name="find_SubReceipt_Details_InputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_SubReceipt_Details_InputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/find_SubReceipt_Details_InputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:findSubReceiptDetailsRequestMsg"/>
          <outputTerminal type="RASGenericService:fetchSubReceiptDetails">
            <wire targetNode="findSubReceiptDetailsRequestLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findSubReceiptDetailsRequestLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findSubReceiptDetailsRequestLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findSubReceiptDetailsRequestLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RASGenericServicePartner_fetchSubReceiptDetails_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="fetchSubReceiptDetails : RASGenericServicePartner" name="RASGenericServicePartner_fetchSubReceiptDetails_Callout" type="Callout">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="fetchSubReceiptDetails"/>
          <property name="invocationStyle" value="6"/>
          <inputTerminal type="RASGenericService:fetchSubReceiptDetails"/>
        </node>
      </requestFlow>
      <responseFlow>
        <node displayName="fetchSubReceiptDetails : RASGenericServicePartner" name="RASGenericServicePartner_fetchSubReceiptDetails_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="fetchSubReceiptDetails"/>
          <outputTerminal type="RASGenericService:fetchSubReceiptDetailsResponse">
            <wire targetNode="Status_Filter"/>
          </outputTerminal>
          <failTerminal type="RASGenericService:fetchSubReceiptDetails"/>
        </node>
        <node displayName="findSubReceiptDetails : RetrieveAccessGC" name="RetrieveAccessGC_findSubReceiptDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findSubReceiptDetailsResponseMsg"/>
        </node>
        <node displayName="findSubReceiptDetails : RetrieveAccessGC" name="RetrieveAccessGC_findSubReceiptDetails_InputFault" type="InputFault">
          <inputTerminal name="findSubReceiptDetails_fetchSubReceiptDetailsFaultMsg" type="ns3:findSubReceiptDetails_fetchSubReceiptDetailsFaultMsg"/>
        </node>
        <node displayName="Status Filter" name="Status_Filter" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/fetchSubReceiptDetailsResponse/FetchSubReceiptDetailsResult/errorMsg='NA'"/>
              <property name="terminalName" value="match1"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="find_SubReceipt_Details_FaultMap"/>
          </outputTerminal>
          <outputTerminal displayName="Success" name="match1">
            <wire targetNode="Total_Amount_Calculation"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node displayName="Total Amount Calculation" name="Total_Amount_Calculation" type="CustomMediation">
          <property name="javaCode"><![CDATA[

try{
Date originalDate = null;
String formattedDate = null;
DateFormat receiptDateOriginalFormat = new SimpleDateFormat("dd/MM/yyyy");
DateFormat instrumentDateDateOriginalFormat = new SimpleDateFormat("dd-MMM-yy");;
DateFormat targetFormat = new SimpleDateFormat("yyyy-MM-dd");
String receiptDate = smo.getString("/body/fetchSubReceiptDetailsResponse/FetchSubReceiptDetailsResult/receiptDate");
String instrumentDate = smo.getString("/body/fetchSubReceiptDetailsResponse/FetchSubReceiptDetailsResult/instrumentDate");
if(receiptDate!=null&&receiptDate!="")
{
originalDate = receiptDateOriginalFormat.parse(receiptDate);
formattedDate = targetFormat.format(originalDate); 
smo.setString("/body/fetchSubReceiptDetailsResponse/FetchSubReceiptDetailsResult/receiptDate",formattedDate);
}
else
{
smo.setString("/body/fetchSubReceiptDetailsResponse/FetchSubReceiptDetailsResult/receiptDate",null);
}

if(instrumentDate!=null&&instrumentDate!="")
{
originalDate = instrumentDateDateOriginalFormat.parse(instrumentDate);
formattedDate = targetFormat.format(originalDate); 
smo.setString("/body/fetchSubReceiptDetailsResponse/FetchSubReceiptDetailsResult/instrumentDate",formattedDate);
}
else
{
smo.setString("/body/fetchSubReceiptDetailsResponse/FetchSubReceiptDetailsResult/instrumentDate",null);
}
String crsAmount = smo.getString("/body/fetchSubReceiptDetailsResponse/FetchSubReceiptDetailsResult/SubRecieptDtls[1]/instrument_amt");
String balance = smo.getString("/body/fetchSubReceiptDetailsResponse/FetchSubReceiptDetailsResult/SubRecieptDtls[1]/balance_amt");
if(crsAmount!=null && crsAmount!="" && balance!=null && balance!="")
{
double totalAmount = Double.valueOf(crsAmount)-Double.valueOf(balance);
smo.setDouble("/context/correlation/totalAmount",totalAmount);
}
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal
}
catch(Exception e){
    e.printStackTrace();
}]]></property>
          <property name="javaClass" value="sca.component.mediation.java.Custom1579499756139"/>
          <property name="version" value="6.1.0"/>
          <property name="javaImports" value="java.text.DateFormat;java.text.SimpleDateFormat;java.util.*"/>
          <inputTerminal/>
          <outputTerminal explicitType="false" type="RASGenericService:fetchSubReceiptDetailsResponse">
            <wire targetNode="find_SubReceipt_Details_OutputMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="find_SubReceipt_Details_OutputMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_SubReceipt_Details_OutputMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/find_SubReceipt_Details_OutputMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:fetchSubReceiptDetailsResponse"/>
          <outputTerminal type="ns3:findSubReceiptDetailsResponseMsg">
            <wire targetNode="findSubReceiptDetailsResponseLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findSubReceiptDetailsResponseLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findSubReceiptDetailsResponseLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findSubReceiptDetailsResponseLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findSubReceiptDetails_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="find_SubReceipt_Details_FaultMap" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/find_SubReceipt_Details_FaultMap_res_1.xsl"/>
          <property name="XMXMap" value="xslt/find_SubReceipt_Details_FaultMap_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:fetchSubReceiptDetailsResponse"/>
          <outputTerminal type="ns3:findSubReceiptDetails_fetchSubReceiptDetailsFaultMsg">
            <wire targetNode="findSubReceiptDetailsFaultLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findSubReceiptDetailsFaultLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findSubReceiptDetailsFaultLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findSubReceiptDetailsFaultLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findSubReceiptDetails_InputFault" targetTerminal="findSubReceiptDetails_fetchSubReceiptDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="findSubReceiptDetails : RetrieveAccessGC" name="RetrieveAccessGC_findSubReceiptDetails_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="find_SubReceipt_Details_ErrorMap"/>
          </outputTerminal>
        </node>
        <node displayName="findSubReceiptDetails : RetrieveAccessGC" name="RetrieveAccessGC_findSubReceiptDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findSubReceiptDetailsResponseMsg"/>
        </node>
        <node displayName="findSubReceiptDetails : RetrieveAccessGC" name="RetrieveAccessGC_findSubReceiptDetails_InputFault" type="InputFault">
          <inputTerminal name="findSubReceiptDetails_fetchSubReceiptDetailsFaultMsg" type="ns3:findSubReceiptDetails_fetchSubReceiptDetailsFaultMsg"/>
        </node>
        <node name="find_SubReceipt_Details_ErrorMap" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/find_SubReceipt_Details_ErrorMap_err_1.xsl"/>
          <property name="XMXMap" value="xslt/find_SubReceipt_Details_ErrorMap_err_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:findSubReceiptDetails_fetchSubReceiptDetailsFaultMsg">
            <wire targetNode="findSubReceiptDetailsErrorLogger"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="findSubReceiptDetailsErrorLogger" type="Trace">
          <property name="enabled" promotedPropertyGroup="Access-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findSubReceiptDetailsErrorLogger.enabled"/>
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="findSubReceiptDetailsErrorLogger.file1" value="GCLogs03112021.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="RetrieveAccessGC_findSubReceiptDetails_InputFault" targetTerminal="findSubReceiptDetails_fetchSubReceiptDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </errorFlow>
    </operation>
    <operation name="findCDDetails">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <node displayName="findCDDetails : RetrieveAccessGC" name="RetrieveAccessGC_findCDDetails_Input" type="Input">
          <outputTerminal type="ns3:findCDDetailsRequestMsg">
            <wire targetNode="input_map"/>
          </outputTerminal>
        </node>
        <node displayName="getDetailsOfCDRefund : RASGenericServicePartner" name="RASGenericServicePartner_getDetailsOfCDRefund_Callout" type="Callout">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="getDetailsOfCDRefund"/>
          <property name="retryOn" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_getDetailsOfCDRefund_Callout.retryOn"/>
          <property name="retryCount" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_getDetailsOfCDRefund_Callout.retryCount"/>
          <property name="retryDelay" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_getDetailsOfCDRefund_Callout.retryDelay"/>
          <inputTerminal type="RASGenericService:getDetailsOfCDRefund"/>
        </node>
        <node name="input_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/getCDDetailsInputMap.xsl"/>
          <property name="XMXMap" value="xslt/getCDDetailsInputMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:findCDDetailsRequestMsg"/>
          <outputTerminal type="RASGenericService:getDetailsOfCDRefund">
            <wire targetNode="RASGenericServicePartner_getDetailsOfCDRefund_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </requestFlow>
      <responseFlow>
        <node displayName="getDetailsOfCDRefund : RASGenericServicePartner" name="RASGenericServicePartner_getDetailsOfCDRefund_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="getDetailsOfCDRefund"/>
          <outputTerminal type="RASGenericService:getDetailsOfCDRefundResponse">
            <wire targetNode="MessageFilter1"/>
          </outputTerminal>
          <failTerminal type="RASGenericService:getDetailsOfCDRefund"/>
        </node>
        <node displayName="findCDDetails : RetrieveAccessGC" name="RetrieveAccessGC_findCDDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findCDDetailsResponseMsg"/>
        </node>
        <node displayName="findCDDetails : RetrieveAccessGC" name="RetrieveAccessGC_findCDDetails_InputFault" type="InputFault">
          <inputTerminal name="findCDDetails_findCDDetailsFaultMsg" type="ns3:findCDDetails_findCDDetailsFaultMsg"/>
        </node>
        <node name="output_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/getCDDetailsOutputMap.xsl"/>
          <property name="XMXMap" value="xslt/getCDDetailsOutputMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:getDetailsOfCDRefundResponse"/>
          <outputTerminal type="ns3:findCDDetailsResponseMsg">
            <wire targetNode="RetrieveAccessGC_findCDDetails_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/CdDetailsErrorMap.xsl"/>
          <property name="XMXMap" value="xslt/CdDetailsErrorMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:getDetailsOfCDRefundResponse"/>
          <outputTerminal type="ns3:findCDDetails_findCDDetailsFaultMsg">
            <wire targetNode="RetrieveAccessGC_findCDDetails_InputFault" targetTerminal="findCDDetails_findCDDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="MessageFilter1" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/getDetailsOfCDRefundResponse/GetDetailsOfCDRefundResult/errorMessage != ''"/>
              <property name="terminalName" value="match1"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="output_map"/>
          </outputTerminal>
          <outputTerminal name="match1">
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="findCDDetails : RetrieveAccessGC" name="RetrieveAccessGC_findCDDetails_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="Mapping"/>
          </outputTerminal>
        </node>
        <node displayName="findCDDetails : RetrieveAccessGC" name="RetrieveAccessGC_findCDDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findCDDetailsResponseMsg"/>
        </node>
        <node displayName="findCDDetails : RetrieveAccessGC" name="RetrieveAccessGC_findCDDetails_InputFault" type="InputFault">
          <inputTerminal name="findCDDetails_findCDDetailsFaultMsg" type="ns3:findCDDetails_findCDDetailsFaultMsg"/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/CDDetailsExceptionMap.xsl"/>
          <property name="XMXMap" value="xslt/CDDetailsExceptionMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:findCDDetails_findCDDetailsFaultMsg">
            <wire targetNode="RetrieveAccessGC_findCDDetails_InputFault" targetTerminal="findCDDetails_findCDDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </errorFlow>
    </operation>
    <operation name="getEMIDetails">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <node displayName="getEMIDetails : RetrieveAccessGC" name="RetrieveAccessGC_getEMIDetails_Input" type="Input">
          <outputTerminal type="ns3:getEMIDetailsRequestMsg">
            <wire targetNode="GetEMIDetailsEMIInputLogger"/>
          </outputTerminal>
        </node>
        <node displayName="getRASEmiDetails : RASGenericServicePartner" name="RASGenericServicePartner_getRASEmiDetails_Callout" type="Callout">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="getRASEmiDetails"/>
          <property name="retryOn" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_getRASEmiDetails_Callout.retryOn"/>
          <property name="retryCount" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_getRASEmiDetails_Callout.retryCount"/>
          <property name="retryDelay" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_getRASEmiDetails_Callout.retryDelay"/>
          <inputTerminal type="RASGenericService:getRASEmiDetails"/>
        </node>
        <node name="input_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/GetRASEMIDEtailsInputMap.xsl"/>
          <property name="XMXMap" value="xslt/GetRASEMIDEtailsInputMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:getEMIDetailsRequestMsg"/>
          <outputTerminal type="RASGenericService:getRASEmiDetails">
            <wire targetNode="RASGenericServicePartner_getRASEmiDetails_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="GetEMIDetailsEMIInputLogger" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="GetEMIDetailsEMIInputLogger.file1"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="input_map"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </requestFlow>
      <responseFlow>
        <node displayName="getRASEmiDetails : RASGenericServicePartner" name="RASGenericServicePartner_getRASEmiDetails_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="getRASEmiDetails"/>
          <outputTerminal type="RASGenericService:getRASEmiDetailsResponse">
            <wire targetNode="getEMIDetailsOutputLogger"/>
          </outputTerminal>
          <failTerminal type="RASGenericService:getRASEmiDetails"/>
        </node>
        <node displayName="getEMIDetails : RetrieveAccessGC" name="RetrieveAccessGC_getEMIDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:getEMIDetailsResponseMsg"/>
        </node>
        <node displayName="getEMIDetails : RetrieveAccessGC" name="RetrieveAccessGC_getEMIDetails_InputFault" type="InputFault">
          <inputTerminal name="getEMIDetails_getEMIDetailsFaultMsg" type="ns3:getEMIDetails_getEMIDetailsFaultMsg"/>
        </node>
        <node name="output_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/GetRASEMIDetailsOutputMap.xsl"/>
          <property name="XMXMap" value="xslt/GetRASEMIDetailsOutputMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:getRASEmiDetailsResponse"/>
          <outputTerminal type="ns3:getEMIDetailsResponseMsg">
            <wire targetNode="RetrieveAccessGC_getEMIDetails_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="getEMIDetailsOutputLogger" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="getEMIDetailsOutputLogger.file"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="MessageFilter1"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="MessageFilter1" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/getRASEmiDetailsResponse/GetRASEmiDetailsResult/errorMsg!=''"/>
              <property name="terminalName" value="match1"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="output_map"/>
          </outputTerminal>
          <outputTerminal name="match1">
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/GetRASEMIDetailsErrorMap.xsl"/>
          <property name="XMXMap" value="xslt/GetRASEMIDetailsErrorMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:getRASEmiDetailsResponse"/>
          <outputTerminal type="ns3:getEMIDetails_getEMIDetailsFaultMsg">
            <wire targetNode="RetrieveAccessGC_getEMIDetails_InputFault" targetTerminal="getEMIDetails_getEMIDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="getEMIDetails : RetrieveAccessGC" name="RetrieveAccessGC_getEMIDetails_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="GetRASEMIDetailsExceptionMap"/>
          </outputTerminal>
        </node>
        <node displayName="getEMIDetails : RetrieveAccessGC" name="RetrieveAccessGC_getEMIDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:getEMIDetailsResponseMsg"/>
        </node>
        <node displayName="getEMIDetails : RetrieveAccessGC" name="RetrieveAccessGC_getEMIDetails_InputFault" type="InputFault">
          <inputTerminal name="getEMIDetails_getEMIDetailsFaultMsg" type="ns3:getEMIDetails_getEMIDetailsFaultMsg"/>
        </node>
        <node name="GetRASEMIDetailsExceptionMap" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="GetRASEMIDetailsExceptionMap.file"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/getRASEMIDetailsExceptionMap.xsl"/>
          <property name="XMXMap" value="xslt/getRASEMIDetailsExceptionMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:getEMIDetails_getEMIDetailsFaultMsg">
            <wire targetNode="RetrieveAccessGC_getEMIDetails_InputFault" targetTerminal="getEMIDetails_getEMIDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </errorFlow>
    </operation>
    <operation name="excessRefundEMIDetails">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <note mfcex:x="20" mfcex:y="250">TODO: 1. Double-click input_map to implement the input map.
2. Complete the remaining task in the response flow.</note>
        <node displayName="excessRefundEMIDetails : RetrieveAccessGC" name="RetrieveAccessGC_excessRefundEMIDetails_Input" type="Input">
          <outputTerminal type="ns3:excessRefundEMIDetailsRequestMsg">
            <wire targetNode="ExcessRefundEMIInputLogger"/>
          </outputTerminal>
        </node>
        <node displayName="receiptEMIDetails : RASGenericServicePartner" name="RASGenericServicePartner_receiptEMIDetails_Callout" type="Callout">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="receiptEMIDetails"/>
          <property name="retryOn" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_receiptEMIDetails_Callout.retryOn"/>
          <property name="retryCount" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_receiptEMIDetails_Callout.retryCount"/>
          <property name="retryDelay" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_receiptEMIDetails_Callout.retryDelay"/>
          <inputTerminal type="RASGenericService:receiptEMIDetails"/>
        </node>
        <node name="input_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/ExcessRefundEMIInputMap.xsl"/>
          <property name="XMXMap" value="xslt/ExcessRefundEMIInputMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:excessRefundEMIDetailsRequestMsg"/>
          <outputTerminal type="RASGenericService:receiptEMIDetails">
            <wire targetNode="RASGenericServicePartner_receiptEMIDetails_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="ExcessRefundEMIInputLogger" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ExcessRefundEMIInputLogger.file" value="F:/Sasidhar/logs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="input_map"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </requestFlow>
      <responseFlow>
        <note mfcex:x="20" mfcex:y="250">TODO: Double-click output_map to implement the output map.</note>
        <node displayName="receiptEMIDetails : RASGenericServicePartner" name="RASGenericServicePartner_receiptEMIDetails_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="receiptEMIDetails"/>
          <outputTerminal type="RASGenericService:receiptEMIDetailsResponse">
            <wire targetNode="ExcessRefundEMIOutputLogger"/>
          </outputTerminal>
          <failTerminal type="RASGenericService:receiptEMIDetails"/>
        </node>
        <node displayName="excessRefundEMIDetails : RetrieveAccessGC" name="RetrieveAccessGC_excessRefundEMIDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:excessRefundEMIDetailsResponseMsg"/>
        </node>
        <node displayName="excessRefundEMIDetails : RetrieveAccessGC" name="RetrieveAccessGC_excessRefundEMIDetails_InputFault" type="InputFault">
          <inputTerminal name="excessRefundEMIDetails_excessRefundEMIDetailsFaultMsg" type="ns3:excessRefundEMIDetails_excessRefundEMIDetailsFaultMsg"/>
        </node>
        <node name="output_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/ExcessRefundEMIOutputMap.xsl"/>
          <property name="XMXMap" value="xslt/ExcessRefundEMIOutputMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:receiptEMIDetailsResponse"/>
          <outputTerminal type="ns3:excessRefundEMIDetailsResponseMsg">
            <wire targetNode="RetrieveAccessGC_excessRefundEMIDetails_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="ExcessRefundEMIOutputLogger" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ExcessRefundEMIOutputLogger.file" value="F:/Sasidhar/logs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="MessageFilter1"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="MessageFilter1" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/receiptEMIDetailsResponse/ReceiptEMIDetailsResult/errorMsg != ''"/>
              <property name="terminalName" value="match1"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="output_map"/>
          </outputTerminal>
          <outputTerminal name="match1">
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/ExcessRefundEmiErrorMap.xsl"/>
          <property name="XMXMap" value="xslt/ExcessRefundEmiErrorMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:receiptEMIDetailsResponse"/>
          <outputTerminal type="ns3:excessRefundEMIDetails_excessRefundEMIDetailsFaultMsg">
            <wire targetNode="RetrieveAccessGC_excessRefundEMIDetails_InputFault" targetTerminal="excessRefundEMIDetails_excessRefundEMIDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="excessRefundEMIDetails : RetrieveAccessGC" name="RetrieveAccessGC_excessRefundEMIDetails_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="ExcessRefundExceptionMap"/>
          </outputTerminal>
        </node>
        <node displayName="excessRefundEMIDetails : RetrieveAccessGC" name="RetrieveAccessGC_excessRefundEMIDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:excessRefundEMIDetailsResponseMsg"/>
        </node>
        <node displayName="excessRefundEMIDetails : RetrieveAccessGC" name="RetrieveAccessGC_excessRefundEMIDetails_InputFault" type="InputFault">
          <inputTerminal name="excessRefundEMIDetails_excessRefundEMIDetailsFaultMsg" type="ns3:excessRefundEMIDetails_excessRefundEMIDetailsFaultMsg"/>
        </node>
        <node name="ExcessRefundExceptionMap" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="ExcessRefundExceptionMap.file" value="F:/Sasidhar/logs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/ExcessRefundExceptionMAp.xsl"/>
          <property name="XMXMap" value="xslt/ExcessRefundExceptionMAp.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:excessRefundEMIDetails_excessRefundEMIDetailsFaultMsg">
            <wire targetNode="RetrieveAccessGC_excessRefundEMIDetails_InputFault" targetTerminal="excessRefundEMIDetails_excessRefundEMIDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </errorFlow>
    </operation>
    <operation name="findPropEndoData">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <node displayName="findPropEndoData : RetrieveAccessGC" name="RetrieveAccessGC_findPropEndoData_Input" type="Input">
          <outputTerminal type="ns3:findPropEndoDataRequestMsg">
            <wire targetNode="PolicyEndoDataInputLogger"/>
          </outputTerminal>
        </node>
        <node displayName="rasPolicyEndoData : RASGenericServicePartner" name="RASGenericServicePartner_rasPolicyEndoData_Callout" type="Callout">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="rasPolicyEndoData"/>
          <property name="retryOn" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_rasPolicyEndoData_Callout.retryOn"/>
          <property name="retryCount" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_rasPolicyEndoData_Callout.retryCount"/>
          <property name="retryDelay" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_rasPolicyEndoData_Callout.retryDelay"/>
          <inputTerminal type="RASGenericService:rasPolicyEndoData"/>
        </node>
        <node name="input_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/RASPolicyEndoDataInputMap.xsl"/>
          <property name="XMXMap" value="xslt/RASPolicyEndoDataInputMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:findPropEndoDataRequestMsg"/>
          <outputTerminal type="RASGenericService:rasPolicyEndoData">
            <wire targetNode="RASGenericServicePartner_rasPolicyEndoData_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="PolicyEndoDataInputLogger" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="PolicyEndoDataInputLogger.file" value="F:/Sasidhar/logs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="input_map"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </requestFlow>
      <responseFlow>
        <node displayName="rasPolicyEndoData : RASGenericServicePartner" name="RASGenericServicePartner_rasPolicyEndoData_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="rasPolicyEndoData"/>
          <outputTerminal type="RASGenericService:rasPolicyEndoDataResponse">
            <wire targetNode="PolicyEndoDataOutputLogger"/>
          </outputTerminal>
          <failTerminal type="RASGenericService:rasPolicyEndoData"/>
        </node>
        <node displayName="findPropEndoData : RetrieveAccessGC" name="RetrieveAccessGC_findPropEndoData_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findPropEndoDataResponseMsg"/>
        </node>
        <node displayName="findPropEndoData : RetrieveAccessGC" name="RetrieveAccessGC_findPropEndoData_InputFault" type="InputFault">
          <inputTerminal name="findPropEndoData_findPropEndoDataFaultMsg" type="ns3:findPropEndoData_findPropEndoDataFaultMsg"/>
        </node>
        <node name="output_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/PolicyEndoOutputMap.xsl"/>
          <property name="XMXMap" value="xslt/PolicyEndoOutputMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:rasPolicyEndoDataResponse"/>
          <outputTerminal type="ns3:findPropEndoDataResponseMsg">
            <wire targetNode="RetrieveAccessGC_findPropEndoData_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="PolicyEndoDataOutputLogger" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="PolicyEndoDataOutputLogger.file" value="F:/Sasidhar/logs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="MessageFilter1"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="MessageFilter1" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/rasPolicyEndoDataResponse/RASPolicyEndoDataResult/errorMsg != ''"/>
              <property name="terminalName" value="match1"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="output_map"/>
          </outputTerminal>
          <outputTerminal name="match1">
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/PolicyEndoMapErrorMap.xsl"/>
          <property name="XMXMap" value="xslt/PolicyEndoMapErrorMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:rasPolicyEndoDataResponse"/>
          <outputTerminal type="ns3:findPropEndoData_findPropEndoDataFaultMsg">
            <wire targetNode="RetrieveAccessGC_findPropEndoData_InputFault" targetTerminal="findPropEndoData_findPropEndoDataFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="findPropEndoData : RetrieveAccessGC" name="RetrieveAccessGC_findPropEndoData_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="PolicyEndoExceptionLogger"/>
          </outputTerminal>
        </node>
        <node displayName="findPropEndoData : RetrieveAccessGC" name="RetrieveAccessGC_findPropEndoData_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findPropEndoDataResponseMsg"/>
        </node>
        <node displayName="findPropEndoData : RetrieveAccessGC" name="RetrieveAccessGC_findPropEndoData_InputFault" type="InputFault">
          <inputTerminal name="findPropEndoData_findPropEndoDataFaultMsg" type="ns3:findPropEndoData_findPropEndoDataFaultMsg"/>
        </node>
        <node name="PolicyEndoExceptionLogger" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="PolicyEndoExceptionLogger.file" value="F:/Sasidhar/logs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/PolicyEndoExceptionMap.xsl"/>
          <property name="XMXMap" value="xslt/PolicyEndoExceptionMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:findPropEndoData_findPropEndoDataFaultMsg">
            <wire targetNode="RetrieveAccessGC_findPropEndoData_InputFault" targetTerminal="findPropEndoData_findPropEndoDataFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </errorFlow>
    </operation>
    <operation name="fetchPropReceiptsRASDetails">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <node displayName="fetchPropReceiptsRASDetails : RetrieveAccessGC" name="RetrieveAccessGC_fetchPropReceiptsRASDetails_Input" type="Input">
          <outputTerminal type="ns3:fetchPropReceiptsRASDetailsRequestMsg">
            <wire targetNode="Trace1"/>
          </outputTerminal>
        </node>
        <node displayName="fetchPropReceiptsRAS : RASGenericServicePartner" name="RASGenericServicePartner_fetchPropReceiptsRAS_Callout" type="Callout">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="fetchPropReceiptsRAS"/>
          <property name="retryOn" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_fetchPropReceiptsRAS_Callout.retryOn"/>
          <property name="retryCount" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_fetchPropReceiptsRAS_Callout.retryCount"/>
          <property name="retryDelay" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_fetchPropReceiptsRAS_Callout.retryDelay"/>
          <inputTerminal type="RASGenericService:fetchPropReceiptsRAS"/>
        </node>
        <node name="input_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/fetchPropReceiptsRASDetailsInputMap.xsl"/>
          <property name="XMXMap" value="xslt/fetchPropReceiptsRASDetailsInputMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:fetchPropReceiptsRASDetailsRequestMsg"/>
          <outputTerminal type="RASGenericService:fetchPropReceiptsRAS">
            <wire targetNode="RASGenericServicePartner_fetchPropReceiptsRAS_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Trace1" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="Trace1.file" value="D:/Sasidhar/Old Backup/RAS/logs/logs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="input_map"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </requestFlow>
      <responseFlow>
        <node displayName="fetchPropReceiptsRAS : RASGenericServicePartner" name="RASGenericServicePartner_fetchPropReceiptsRAS_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="fetchPropReceiptsRAS"/>
          <outputTerminal type="RASGenericService:fetchPropReceiptsRASResponse">
            <wire targetNode="Trace1"/>
          </outputTerminal>
          <failTerminal type="RASGenericService:fetchPropReceiptsRAS"/>
        </node>
        <node displayName="fetchPropReceiptsRASDetails : RetrieveAccessGC" name="RetrieveAccessGC_fetchPropReceiptsRASDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:fetchPropReceiptsRASDetailsResponseMsg"/>
        </node>
        <node displayName="fetchPropReceiptsRASDetails : RetrieveAccessGC" name="RetrieveAccessGC_fetchPropReceiptsRASDetails_InputFault" type="InputFault">
          <inputTerminal name="fetchPropReceiptsRASDetails_fetchPropReceiptsRASDetailsFaultMsg" type="ns3:fetchPropReceiptsRASDetails_fetchPropReceiptsRASDetailsFaultMsg"/>
        </node>
        <node name="output_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/fetchPropReceiptsRASDetailsOutputMap.xsl"/>
          <property name="XMXMap" value="xslt/fetchPropReceiptsRASDetailsOutputMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:fetchPropReceiptsRASResponse"/>
          <outputTerminal type="ns3:fetchPropReceiptsRASDetailsResponseMsg">
            <wire targetNode="RetrieveAccessGC_fetchPropReceiptsRASDetails_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Trace1" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="Trace1.file1" value="D:/Sasidhar/Old Backup/RAS/logs/logs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="MessageFilter1"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="MessageFilter1" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="count(body/fetchPropReceiptsRASResponse/FetchPropReceiptsRASResult/paymentDetails  ) >0"/>
              <property name="terminalName" value="match1"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <outputTerminal name="match1">
            <wire targetNode="output_map"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/fetchPropReceiptsRASDetailsErrorMap.xsl"/>
          <property name="XMXMap" value="xslt/fetchPropReceiptsRASDetailsErrorMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:fetchPropReceiptsRASResponse"/>
          <outputTerminal type="ns3:fetchPropReceiptsRASDetails_fetchPropReceiptsRASDetailsFaultMsg">
            <wire targetNode="RetrieveAccessGC_fetchPropReceiptsRASDetails_InputFault" targetTerminal="fetchPropReceiptsRASDetails_fetchPropReceiptsRASDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="fetchPropReceiptsRASDetails : RetrieveAccessGC" name="RetrieveAccessGC_fetchPropReceiptsRASDetails_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="Trace1"/>
          </outputTerminal>
        </node>
        <node displayName="fetchPropReceiptsRASDetails : RetrieveAccessGC" name="RetrieveAccessGC_fetchPropReceiptsRASDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:fetchPropReceiptsRASDetailsResponseMsg"/>
        </node>
        <node displayName="fetchPropReceiptsRASDetails : RetrieveAccessGC" name="RetrieveAccessGC_fetchPropReceiptsRASDetails_InputFault" type="InputFault">
          <inputTerminal name="fetchPropReceiptsRASDetails_fetchPropReceiptsRASDetailsFaultMsg" type="ns3:fetchPropReceiptsRASDetails_fetchPropReceiptsRASDetailsFaultMsg"/>
        </node>
        <node name="Trace1" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="Trace1.file2" value="D:/Sasidhar/Old Backup/RAS/logs/logs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/fetchPropReceiptsRASDetailsExceptionMap.xsl"/>
          <property name="XMXMap" value="xslt/fetchPropReceiptsRASDetailsExceptionMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:fetchPropReceiptsRASDetails_fetchPropReceiptsRASDetailsFaultMsg">
            <wire targetNode="RetrieveAccessGC_fetchPropReceiptsRASDetails_InputFault" targetTerminal="fetchPropReceiptsRASDetails_fetchPropReceiptsRASDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </errorFlow>
    </operation>
    <operation name="tenureDetails">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <node displayName="tenureDetails : RetrieveAccessGC" name="RetrieveAccessGC_tenureDetails_Input" type="Input">
          <outputTerminal type="ns3:tenureDetailsRequestMsg">
            <wire targetNode="TenureDetailsInputLog"/>
          </outputTerminal>
        </node>
        <node displayName="tenureDetails : RASGenericServicePartner" name="RASGenericServicePartner_tenureDetails_Callout" type="Callout">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="tenureDetails"/>
          <property name="retryOn" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_tenureDetails_Callout.retryOn"/>
          <property name="retryCount" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_tenureDetails_Callout.retryCount"/>
          <property name="retryDelay" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_tenureDetails_Callout.retryDelay"/>
          <inputTerminal type="RASGenericService:tenureDetails"/>
        </node>
        <node name="input_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/TenureDetailsInputMap.xsl"/>
          <property name="XMXMap" value="xslt/TenureDetailsInputMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:tenureDetailsRequestMsg"/>
          <outputTerminal type="RASGenericService:tenureDetails">
            <wire targetNode="RASGenericServicePartner_tenureDetails_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="TenureDetailsInputLog" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="TenureDetailsInputLog.file" value="RASLog.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="input_map"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </requestFlow>
      <responseFlow>
        <node displayName="tenureDetails : RASGenericServicePartner" name="RASGenericServicePartner_tenureDetails_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="tenureDetails"/>
          <outputTerminal type="RASGenericService:tenureDetailsResponse">
            <wire targetNode="TenureDetailsOutputLog"/>
          </outputTerminal>
          <failTerminal type="RASGenericService:tenureDetails"/>
        </node>
        <node displayName="tenureDetails : RetrieveAccessGC" name="RetrieveAccessGC_tenureDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:tenureDetailsResponseMsg"/>
        </node>
        <node displayName="tenureDetails : RetrieveAccessGC" name="RetrieveAccessGC_tenureDetails_InputFault" type="InputFault">
          <inputTerminal name="tenureDetails_tenureDetailsFaultMsg" type="ns3:tenureDetails_tenureDetailsFaultMsg"/>
        </node>
        <node name="output_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/TenureDetailsOutputMap.xsl"/>
          <property name="XMXMap" value="xslt/TenureDetailsOutputMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:tenureDetailsResponse"/>
          <outputTerminal type="ns3:tenureDetailsResponseMsg">
            <wire targetNode="RetrieveAccessGC_tenureDetails_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="TenureDetailsOutputLog" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="Trace1.file3" value="RASLog.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="MessageFilter1"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="MessageFilter1" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/tenureDetailsResponse/TenureDetailsResult/errorMsg != ''"/>
              <property name="terminalName" value="match1"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="output_map"/>
          </outputTerminal>
          <outputTerminal name="match1">
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/TenureDetailsErrorMap.xsl"/>
          <property name="XMXMap" value="xslt/TenureDetailsErrorMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:tenureDetailsResponse"/>
          <outputTerminal type="ns3:tenureDetails_tenureDetailsFaultMsg">
            <wire targetNode="RetrieveAccessGC_tenureDetails_InputFault" targetTerminal="tenureDetails_tenureDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="tenureDetails : RetrieveAccessGC" name="RetrieveAccessGC_tenureDetails_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="Mapping"/>
          </outputTerminal>
        </node>
        <node displayName="tenureDetails : RetrieveAccessGC" name="RetrieveAccessGC_tenureDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:tenureDetailsResponseMsg"/>
        </node>
        <node displayName="tenureDetails : RetrieveAccessGC" name="RetrieveAccessGC_tenureDetails_InputFault" type="InputFault">
          <inputTerminal name="tenureDetails_tenureDetailsFaultMsg" type="ns3:tenureDetails_tenureDetailsFaultMsg"/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/TenureDetailsExceptionMap.xsl"/>
          <property name="XMXMap" value="xslt/TenureDetailsExceptionMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:tenureDetails_tenureDetailsFaultMsg">
            <wire targetNode="RetrieveAccessGC_tenureDetails_InputFault" targetTerminal="tenureDetails_tenureDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </errorFlow>
    </operation>
    <operation name="findCdDetailsAcc">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <node displayName="findCdDetailsAcc : RetrieveAccessGC" name="RetrieveAccessGC_findCdDetailsAcc_Input" type="Input">
          <outputTerminal type="ns3:findCdDetailsAccRequestMsg">
            <wire targetNode="GetCDDetailsAccInputLogger"/>
          </outputTerminal>
        </node>
        <node displayName="fetchCDDetailsRAS : RASGenericServicePartner" name="RASGenericServicePartner_fetchCDDetailsRAS_Callout" type="Callout">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="fetchCDDetailsRAS"/>
          <property name="retryOn" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_fetchCDDetailsRAS_Callout.retryOn"/>
          <property name="retryCount" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_fetchCDDetailsRAS_Callout.retryCount"/>
          <property name="retryDelay" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_fetchCDDetailsRAS_Callout.retryDelay"/>
          <inputTerminal type="RASGenericService:fetchCDDetailsRAS"/>
        </node>
        <node name="GetCDDetailsAccInputMap" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/GetCDDetailsAccInputMap_req_1.xsl"/>
          <property name="XMXMap" value="xslt/GetCDDetailsAccInputMap_req_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:findCdDetailsAccRequestMsg"/>
          <outputTerminal type="RASGenericService:fetchCDDetailsRAS">
            <wire targetNode="RASGenericServicePartner_fetchCDDetailsRAS_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="GetCDDetailsAccInputLogger" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="GetCDDetailsAccInputLogger.file" value="IIDLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="GetCDDetailsAccInputMap"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </requestFlow>
      <responseFlow>
        <node displayName="fetchCDDetailsRAS : RASGenericServicePartner" name="RASGenericServicePartner_fetchCDDetailsRAS_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="fetchCDDetailsRAS"/>
          <outputTerminal type="RASGenericService:fetchCDDetailsRASResponse">
            <wire targetNode="GetCDDetailsOutputLog"/>
          </outputTerminal>
          <failTerminal type="RASGenericService:fetchCDDetailsRAS"/>
        </node>
        <node displayName="findCdDetailsAcc : RetrieveAccessGC" name="RetrieveAccessGC_findCdDetailsAcc_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findCdDetailsAccResponseMsg"/>
        </node>
        <node displayName="findCdDetailsAcc : RetrieveAccessGC" name="RetrieveAccessGC_findCdDetailsAcc_InputFault" type="InputFault">
          <inputTerminal name="findCdDetailsAcc_findCdDetailsAccFaultMsg" type="ns3:findCdDetailsAcc_findCdDetailsAccFaultMsg"/>
        </node>
        <node name="output_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/output_map_res_1.xsl"/>
          <property name="XMXMap" value="xslt/output_map_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:fetchCDDetailsRASResponse"/>
          <outputTerminal type="ns3:findCdDetailsAccResponseMsg">
            <wire targetNode="RetrieveAccessGC_findCdDetailsAcc_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="GetCDDetailsOutputLog" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="GetCDDetailsOutputLog.file" value="IIDLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="MessageFilter1"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="MessageFilter1" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/fetchCDDetailsRASResponse/FetchCDDetailsRASResult/cdDetails/cdAccountNo = ''"/>
              <property name="terminalName" value="match1"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="output_map"/>
          </outputTerminal>
          <outputTerminal name="match1">
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/Mapping_res_1.xsl"/>
          <property name="XMXMap" value="xslt/Mapping_res_1.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:fetchCDDetailsRASResponse"/>
          <outputTerminal type="ns3:findCdDetailsAcc_findCdDetailsAccFaultMsg">
            <wire targetNode="RetrieveAccessGC_findCdDetailsAcc_InputFault" targetTerminal="findCdDetailsAcc_findCdDetailsAccFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="findCdDetailsAcc : RetrieveAccessGC" name="RetrieveAccessGC_findCdDetailsAcc_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="CDAccDetailsErrorLog"/>
          </outputTerminal>
        </node>
        <node displayName="findCdDetailsAcc : RetrieveAccessGC" name="RetrieveAccessGC_findCdDetailsAcc_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:findCdDetailsAccResponseMsg"/>
        </node>
        <node displayName="findCdDetailsAcc : RetrieveAccessGC" name="RetrieveAccessGC_findCdDetailsAcc_InputFault" type="InputFault">
          <inputTerminal name="findCdDetailsAcc_findCdDetailsAccFaultMsg" type="ns3:findCdDetailsAcc_findCdDetailsAccFaultMsg"/>
        </node>
        <node name="CDAccDetailsErrorLog" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="CDAccDetailsErrorLog.file" value="IIDLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/CDDetailsAccExceptionMap.xsl"/>
          <property name="XMXMap" value="xslt/CDDetailsAccExceptionMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:findCdDetailsAcc_findCdDetailsAccFaultMsg">
            <wire targetNode="RetrieveAccessGC_findCdDetailsAcc_InputFault" targetTerminal="findCdDetailsAcc_findCdDetailsAccFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </errorFlow>
    </operation>
    <operation name="getProposalDetailsBalanceRefund">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <node displayName="getProposalDetailsBalanceRefund : RetrieveAccessGC" name="RetrieveAccessGC_getProposalDetailsBalanceRefund_Input" type="Input">
          <outputTerminal type="ns3:getProposalDetailsBalanceRefundRequestMsg">
            <wire targetNode="BalanceRefundProposalInputLogger"/>
          </outputTerminal>
        </node>
        <node displayName="policyDetailsByProposalNo : RASGenericServicePartner" name="RASGenericServicePartner_policyDetailsByProposalNo_Callout" type="Callout">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="policyDetailsByProposalNo"/>
          <property name="retryOn" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_policyDetailsByProposalNo_Callout.retryOn"/>
          <property name="retryCount" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_policyDetailsByProposalNo_Callout.retryCount"/>
          <property name="retryDelay" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_policyDetailsByProposalNo_Callout.retryDelay"/>
          <inputTerminal type="RASGenericService:policyDetailsByProposalNo"/>
        </node>
        <node name="input_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/BalanceRefundInputMap.xsl"/>
          <property name="XMXMap" value="xslt/BalanceRefundInputMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:getProposalDetailsBalanceRefundRequestMsg"/>
          <outputTerminal type="RASGenericService:policyDetailsByProposalNo">
            <wire targetNode="RASGenericServicePartner_policyDetailsByProposalNo_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="BalanceRefundProposalInputLogger" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="BalanceRefundProposalInputLogger.file" value="IIDLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="input_map"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </requestFlow>
      <responseFlow>
        <node displayName="policyDetailsByProposalNo : RASGenericServicePartner" name="RASGenericServicePartner_policyDetailsByProposalNo_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="policyDetailsByProposalNo"/>
          <outputTerminal type="RASGenericService:policyDetailsByProposalNoResponse">
            <wire targetNode="getPropDetailBalanceRefund"/>
          </outputTerminal>
          <failTerminal type="RASGenericService:policyDetailsByProposalNo"/>
        </node>
        <node displayName="getProposalDetailsBalanceRefund : RetrieveAccessGC" name="RetrieveAccessGC_getProposalDetailsBalanceRefund_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:getProposalDetailsBalanceRefundResponseMsg"/>
        </node>
        <node displayName="getProposalDetailsBalanceRefund : RetrieveAccessGC" name="RetrieveAccessGC_getProposalDetailsBalanceRefund_InputFault" type="InputFault">
          <inputTerminal name="getProposalDetailsBalanceRefund_getProposalDetailsBalanceRefundFaultMsg" type="ns3:getProposalDetailsBalanceRefund_getProposalDetailsBalanceRefundFaultMsg"/>
        </node>
        <node name="output_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/getPropDetailsBalanceRefundInputMap.xsl"/>
          <property name="XMXMap" value="xslt/getPropDetailsBalanceRefundInputMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:policyDetailsByProposalNoResponse"/>
          <outputTerminal type="ns3:getProposalDetailsBalanceRefundResponseMsg">
            <wire targetNode="RetrieveAccessGC_getProposalDetailsBalanceRefund_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="getPropDetailBalanceRefund" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" value="IIDLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="MessageFilter1"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="MessageFilter1" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/policyDetailsByProposalNoResponse/PolicyDetailsByProposalNoResult/errMsg != ''"/>
              <property name="terminalName" value="match1"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="output_map"/>
          </outputTerminal>
          <outputTerminal name="match1">
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/getProposalDetailsBalanceErrorMap.xsl"/>
          <property name="XMXMap" value="xslt/getProposalDetailsBalanceErrorMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:policyDetailsByProposalNoResponse"/>
          <outputTerminal type="ns3:getProposalDetailsBalanceRefund_getProposalDetailsBalanceRefundFaultMsg">
            <wire targetNode="RetrieveAccessGC_getProposalDetailsBalanceRefund_InputFault" targetTerminal="getProposalDetailsBalanceRefund_getProposalDetailsBalanceRefundFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="getProposalDetailsBalanceRefund : RetrieveAccessGC" name="RetrieveAccessGC_getProposalDetailsBalanceRefund_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="getPropDetailBalanceExceptionLog"/>
          </outputTerminal>
        </node>
        <node displayName="getProposalDetailsBalanceRefund : RetrieveAccessGC" name="RetrieveAccessGC_getProposalDetailsBalanceRefund_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:getProposalDetailsBalanceRefundResponseMsg"/>
        </node>
        <node displayName="getProposalDetailsBalanceRefund : RetrieveAccessGC" name="RetrieveAccessGC_getProposalDetailsBalanceRefund_InputFault" type="InputFault">
          <inputTerminal name="getProposalDetailsBalanceRefund_getProposalDetailsBalanceRefundFaultMsg" type="ns3:getProposalDetailsBalanceRefund_getProposalDetailsBalanceRefundFaultMsg"/>
        </node>
        <node name="getPropDetailBalanceExceptionLog" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="getPropDetailBalanceExceptionLog.file" value="IIDLogs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/getPropDetailsBalanceExceptionMap.xsl"/>
          <property name="XMXMap" value="xslt/getPropDetailsBalanceExceptionMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:getProposalDetailsBalanceRefund_getProposalDetailsBalanceRefundFaultMsg">
            <wire targetNode="RetrieveAccessGC_getProposalDetailsBalanceRefund_InputFault" targetTerminal="getProposalDetailsBalanceRefund_getProposalDetailsBalanceRefundFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </errorFlow>
    </operation>
    <operation name="fetchProductDetails">
      <requestFlow mfcex:showInputResponse="false" mfcex:showInputFault="false">
        <node displayName="fetchProductDetails : RetrieveAccessGC" name="RetrieveAccessGC_fetchProductDetails_Input" type="Input">
          <outputTerminal type="ns3:fetchProductDetailsRequestMsg">
            <wire targetNode="FetchPolicyInputLogger"/>
          </outputTerminal>
        </node>
        <node displayName="fetchPolicy : RASGenericServicePartner" name="RASGenericServicePartner_fetchPolicy_Callout" type="Callout">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="fetchPolicy"/>
          <property name="retryOn" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_fetchPolicy_Callout.retryOn1"/>
          <property name="retryCount" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_fetchPolicy_Callout.retryCount1"/>
          <property name="retryDelay" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="RASGenericServicePartner_fetchPolicy_Callout.retryDelay1"/>
          <inputTerminal type="RASGenericService:fetchPolicy"/>
        </node>
        <node name="input_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/fetchPolicyInputLogger.xsl"/>
          <property name="XMXMap" value="xslt/fetchPolicyInputLogger.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="ns3:fetchProductDetailsRequestMsg"/>
          <outputTerminal type="RASGenericService:fetchPolicy">
            <wire targetNode="RASGenericServicePartner_fetchPolicy_Callout"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="FetchPolicyInputLogger" type="Trace">
          <property name="destination" value="2"/>
          <property name="file" promotedPropertyGroup="RASAccess-ApplicationGC.RetrieveGCMediationCmpt" promotedPropertyName="Trace1.file4" value="Logs.txt"/>
          <inputTerminal/>
          <outputTerminal>
            <wire targetNode="input_map"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </requestFlow>
      <responseFlow>
        <node displayName="fetchPolicy : RASGenericServicePartner" name="RASGenericServicePartner_fetchPolicy_CalloutResponse" type="CalloutResponse">
          <property name="referenceName" value="RASGenericServicePartner"/>
          <property name="operationName" value="fetchPolicy"/>
          <outputTerminal type="RASGenericService:fetchPolicyResponse">
            <wire targetNode="MessageFilter1"/>
          </outputTerminal>
          <failTerminal type="RASGenericService:fetchPolicy"/>
        </node>
        <node displayName="fetchProductDetails : RetrieveAccessGC" name="RetrieveAccessGC_fetchProductDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:fetchProductDetailsResponseMsg"/>
        </node>
        <node displayName="fetchProductDetails : RetrieveAccessGC" name="RetrieveAccessGC_fetchProductDetails_InputFault" type="InputFault">
          <inputTerminal name="fetchProductDetails_fetchProductDetailsFaultMsg" type="ns3:fetchProductDetails_fetchProductDetailsFaultMsg"/>
        </node>
        <node name="output_map" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/FetchProductOutputMapper.xsl"/>
          <property name="XMXMap" value="xslt/FetchProductOutputMapper.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:fetchPolicyResponse"/>
          <outputTerminal type="ns3:fetchProductDetailsResponseMsg">
            <wire targetNode="RetrieveAccessGC_fetchProductDetails_InputResponse"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="MessageFilter1" type="MessageFilter">
          <table name="filters">
            <row>
              <property name="pattern" value="/body/fetchPolicyResponse/FetchPolicyResult/errorMsg != ''"/>
              <property name="terminalName" value="match1"/>
            </row>
          </table>
          <inputTerminal/>
          <outputTerminal name="default">
            <wire targetNode="output_map"/>
          </outputTerminal>
          <outputTerminal name="match1">
            <wire targetNode="Mapping"/>
          </outputTerminal>
          <failTerminal/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/body"/>
          <property name="XSLTransform" value="xslt/FetchPolicyErrorMap.xsl"/>
          <property name="XMXMap" value="xslt/FetchPolicyErrorMap.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="RASGenericService:fetchPolicyResponse"/>
          <outputTerminal type="ns3:fetchProductDetails_fetchProductDetailsFaultMsg">
            <wire targetNode="RetrieveAccessGC_fetchProductDetails_InputFault" targetTerminal="fetchProductDetails_fetchProductDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </responseFlow>
      <errorFlow>
        <node displayName="fetchProductDetails : RetrieveAccessGC" name="RetrieveAccessGC_fetchProductDetails_ErrorInput" type="ErrorInput">
          <outputTerminal name="catchAll" type="XMLSchema:anyType">
            <wire targetNode="Mapping"/>
          </outputTerminal>
        </node>
        <node displayName="fetchProductDetails : RetrieveAccessGC" name="RetrieveAccessGC_fetchProductDetails_InputResponse" type="InputResponse">
          <inputTerminal type="ns3:fetchProductDetailsResponseMsg"/>
        </node>
        <node displayName="fetchProductDetails : RetrieveAccessGC" name="RetrieveAccessGC_fetchProductDetails_InputFault" type="InputFault">
          <inputTerminal name="fetchProductDetails_fetchProductDetailsFaultMsg" type="ns3:fetchProductDetails_fetchProductDetailsFaultMsg"/>
        </node>
        <node name="Mapping" type="XSLTransformation">
          <property name="root" value="/"/>
          <property name="XSLTransform" value="xslt/FetchProductExceptionMapper.xsl"/>
          <property name="XMXMap" value="xslt/FetchProductExceptionMapper.map"/>
          <property name="SMOVersion" value="SMO61"/>
          <inputTerminal type="XMLSchema:anyType"/>
          <outputTerminal type="ns3:fetchProductDetails_fetchProductDetailsFaultMsg">
            <wire targetNode="RetrieveAccessGC_fetchProductDetails_InputFault" targetTerminal="fetchProductDetails_fetchProductDetailsFaultMsg"/>
          </outputTerminal>
          <failTerminal/>
        </node>
      </errorFlow>
    </operation>
  </interface>
</mediationFlow>